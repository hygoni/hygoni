<?xml version="1.0" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<svg version="1.1" width="1200" height="518" onload="init(evt)" viewBox="0 0 1200 518" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
<!-- Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples. -->
<!-- NOTES:  -->
<defs>
	<linearGradient id="background" y1="0" y2="1" x1="0" x2="0" >
		<stop stop-color="#eeeeee" offset="5%" />
		<stop stop-color="#eeeeb0" offset="95%" />
	</linearGradient>
</defs>
<style type="text/css">
	text { font-family:Verdana; font-size:12px; fill:rgb(0,0,0); }
	#search, #ignorecase { opacity:0.1; cursor:pointer; }
	#search:hover, #search.show, #ignorecase:hover, #ignorecase.show { opacity:1; }
	#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
	#title { text-anchor:middle; font-size:17px}
	#unzoom { cursor:pointer; }
	#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
	.hide { display:none; }
	.parent { opacity:0.5; }
</style>
<script type="text/ecmascript">
<![CDATA[
	"use strict";
	var details, searchbtn, unzoombtn, matchedtxt, svg, searching, currentSearchTerm, ignorecase, ignorecaseBtn;
	function init(evt) {
		details = document.getElementById("details").firstChild;
		searchbtn = document.getElementById("search");
		ignorecaseBtn = document.getElementById("ignorecase");
		unzoombtn = document.getElementById("unzoom");
		matchedtxt = document.getElementById("matched");
		svg = document.getElementsByTagName("svg")[0];
		searching = 0;
		currentSearchTerm = null;

		// use GET parameters to restore a flamegraphs state.
		var params = get_params();
		if (params.x && params.y)
			zoom(find_group(document.querySelector('[x="' + params.x + '"][y="' + params.y + '"]')));
                if (params.s) search(params.s);
	}

	// event listeners
	window.addEventListener("click", function(e) {
		var target = find_group(e.target);
		if (target) {
			if (target.nodeName == "a") {
				if (e.ctrlKey === false) return;
				e.preventDefault();
			}
			if (target.classList.contains("parent")) unzoom();
			zoom(target);
			if (!document.querySelector('.parent')) {
				clearzoom();
				return;
			}

			// set parameters for zoom state
			var el = target.querySelector("rect");
			if (el && el.attributes && el.attributes.y && el.attributes._orig_x) {
				var params = get_params()
				params.x = el.attributes._orig_x.value;
				params.y = el.attributes.y.value;
				history.replaceState(null, null, parse_params(params));
			}
		}
		else if (e.target.id == "unzoom") clearzoom();
		else if (e.target.id == "search") search_prompt();
		else if (e.target.id == "ignorecase") toggle_ignorecase();
	}, false)

	// mouse-over for info
	// show
	window.addEventListener("mouseover", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = "Function: " + g_to_text(target);
	}, false)

	// clear
	window.addEventListener("mouseout", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = ' ';
	}, false)

	// ctrl-F for search
	// ctrl-I to toggle case-sensitive search
	window.addEventListener("keydown",function (e) {
		if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
			e.preventDefault();
			search_prompt();
		}
		else if (e.ctrlKey && e.keyCode === 73) {
			e.preventDefault();
			toggle_ignorecase();
		}
	}, false)

	// functions
	function get_params() {
		var params = {};
		var paramsarr = window.location.search.substr(1).split('&');
		for (var i = 0; i < paramsarr.length; ++i) {
			var tmp = paramsarr[i].split("=");
			if (!tmp[0] || !tmp[1]) continue;
			params[tmp[0]]  = decodeURIComponent(tmp[1]);
		}
		return params;
	}
	function parse_params(params) {
		var uri = "?";
		for (var key in params) {
			uri += key + '=' + encodeURIComponent(params[key]) + '&';
		}
		if (uri.slice(-1) == "&")
			uri = uri.substring(0, uri.length - 1);
		if (uri == '?')
			uri = window.location.href.split('?')[0];
		return uri;
	}
	function find_child(node, selector) {
		var children = node.querySelectorAll(selector);
		if (children.length) return children[0];
	}
	function find_group(node) {
		var parent = node.parentElement;
		if (!parent) return;
		if (parent.id == "frames") return node;
		return find_group(parent);
	}
	function orig_save(e, attr, val) {
		if (e.attributes["_orig_" + attr] != undefined) return;
		if (e.attributes[attr] == undefined) return;
		if (val == undefined) val = e.attributes[attr].value;
		e.setAttribute("_orig_" + attr, val);
	}
	function orig_load(e, attr) {
		if (e.attributes["_orig_"+attr] == undefined) return;
		e.attributes[attr].value = e.attributes["_orig_" + attr].value;
		e.removeAttribute("_orig_"+attr);
	}
	function g_to_text(e) {
		var text = find_child(e, "title").firstChild.nodeValue;
		return (text)
	}
	function g_to_func(e) {
		var func = g_to_text(e);
		// if there's any manipulation we want to do to the function
		// name before it's searched, do it here before returning.
		return (func);
	}
	function update_text(e) {
		var r = find_child(e, "rect");
		var t = find_child(e, "text");
		var w = parseFloat(r.attributes.width.value) -3;
		var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
		t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;

		// Smaller than this size won't fit anything
		if (w < 2 * 12 * 0.59) {
			t.textContent = "";
			return;
		}

		t.textContent = txt;
		// Fit in full text width
		if (/^ *$/.test(txt) || t.getSubStringLength(0, txt.length) < w)
			return;

		for (var x = txt.length - 2; x > 0; x--) {
			if (t.getSubStringLength(0, x + 2) <= w) {
				t.textContent = txt.substring(0, x) + "..";
				return;
			}
		}
		t.textContent = "";
	}

	// zoom
	function zoom_reset(e) {
		if (e.attributes != undefined) {
			orig_load(e, "x");
			orig_load(e, "width");
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_reset(c[i]);
		}
	}
	function zoom_child(e, x, ratio) {
		if (e.attributes != undefined) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - 10) * ratio + 10;
				if (e.tagName == "text")
					e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
			}
		}

		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_child(c[i], x - 10, ratio);
		}
	}
	function zoom_parent(e) {
		if (e.attributes) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = 10;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseInt(svg.width.baseVal.value) - (10 * 2);
			}
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_parent(c[i]);
		}
	}
	function zoom(node) {
		var attr = find_child(node, "rect").attributes;
		var width = parseFloat(attr.width.value);
		var xmin = parseFloat(attr.x.value);
		var xmax = parseFloat(xmin + width);
		var ymin = parseFloat(attr.y.value);
		var ratio = (svg.width.baseVal.value - 2 * 10) / width;

		// XXX: Workaround for JavaScript float issues (fix me)
		var fudge = 0.0001;

		unzoombtn.classList.remove("hide");

		var el = document.getElementById("frames").children;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var a = find_child(e, "rect").attributes;
			var ex = parseFloat(a.x.value);
			var ew = parseFloat(a.width.value);
			var upstack;
			// Is it an ancestor
			if (0 == 0) {
				upstack = parseFloat(a.y.value) > ymin;
			} else {
				upstack = parseFloat(a.y.value) < ymin;
			}
			if (upstack) {
				// Direct ancestor
				if (ex <= xmin && (ex+ew+fudge) >= xmax) {
					e.classList.add("parent");
					zoom_parent(e);
					update_text(e);
				}
				// not in current path
				else
					e.classList.add("hide");
			}
			// Children maybe
			else {
				// no common path
				if (ex < xmin || ex + fudge >= xmax) {
					e.classList.add("hide");
				}
				else {
					zoom_child(e, xmin, ratio);
					update_text(e);
				}
			}
		}
		search();
	}
	function unzoom() {
		unzoombtn.classList.add("hide");
		var el = document.getElementById("frames").children;
		for(var i = 0; i < el.length; i++) {
			el[i].classList.remove("parent");
			el[i].classList.remove("hide");
			zoom_reset(el[i]);
			update_text(el[i]);
		}
		search();
	}
	function clearzoom() {
		unzoom();

		// remove zoom state
		var params = get_params();
		if (params.x) delete params.x;
		if (params.y) delete params.y;
		history.replaceState(null, null, parse_params(params));
	}

	// search
	function toggle_ignorecase() {
		ignorecase = !ignorecase;
		if (ignorecase) {
			ignorecaseBtn.classList.add("show");
		} else {
			ignorecaseBtn.classList.remove("show");
		}
		reset_search();
		search();
	}
	function reset_search() {
		var el = document.querySelectorAll("#frames rect");
		for (var i = 0; i < el.length; i++) {
			orig_load(el[i], "fill")
		}
		var params = get_params();
		delete params.s;
		history.replaceState(null, null, parse_params(params));
	}
	function search_prompt() {
		if (!searching) {
			var term = prompt("Enter a search term (regexp " +
			    "allowed, eg: ^ext4_)"
			    + (ignorecase ? ", ignoring case" : "")
			    + "\nPress Ctrl-i to toggle case sensitivity", "");
			if (term != null) search(term);
		} else {
			reset_search();
			searching = 0;
			currentSearchTerm = null;
			searchbtn.classList.remove("show");
			searchbtn.firstChild.nodeValue = "Search"
			matchedtxt.classList.add("hide");
			matchedtxt.firstChild.nodeValue = ""
		}
	}
	function search(term) {
		if (term) currentSearchTerm = term;

		var re = new RegExp(currentSearchTerm, ignorecase ? 'i' : '');
		var el = document.getElementById("frames").children;
		var matches = new Object();
		var maxwidth = 0;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var func = g_to_func(e);
			var rect = find_child(e, "rect");
			if (func == null || rect == null)
				continue;

			// Save max width. Only works as we have a root frame
			var w = parseFloat(rect.attributes.width.value);
			if (w > maxwidth)
				maxwidth = w;

			if (func.match(re)) {
				// highlight
				var x = parseFloat(rect.attributes.x.value);
				orig_save(rect, "fill");
				rect.attributes.fill.value = "rgb(230,0,230)";

				// remember matches
				if (matches[x] == undefined) {
					matches[x] = w;
				} else {
					if (w > matches[x]) {
						// overwrite with parent
						matches[x] = w;
					}
				}
				searching = 1;
			}
		}
		if (!searching)
			return;
		var params = get_params();
		params.s = currentSearchTerm;
		history.replaceState(null, null, parse_params(params));

		searchbtn.classList.add("show");
		searchbtn.firstChild.nodeValue = "Reset Search";

		// calculate percent matched, excluding vertical overlap
		var count = 0;
		var lastx = -1;
		var lastw = 0;
		var keys = Array();
		for (k in matches) {
			if (matches.hasOwnProperty(k))
				keys.push(k);
		}
		// sort the matched frames by their x location
		// ascending, then width descending
		keys.sort(function(a, b){
			return a - b;
		});
		// Step through frames saving only the biggest bottom-up frames
		// thanks to the sort order. This relies on the tree property
		// where children are always smaller than their parents.
		var fudge = 0.0001;	// JavaScript floating point
		for (var k in keys) {
			var x = parseFloat(keys[k]);
			var w = matches[keys[k]];
			if (x >= lastx + lastw - fudge) {
				count += w;
				lastx = x;
				lastw = w;
			}
		}
		// display matched percent
		matchedtxt.classList.remove("hide");
		var pct = 100 * count / maxwidth;
		if (pct != 100) pct = pct.toFixed(1)
		matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
	}
]]>
</script>
<rect x="0.0" y="0" width="1200.0" height="518.0" fill="url(#background)"  />
<text id="title" x="600.00" y="24" >Flame Graph</text>
<text id="details" x="10.00" y="501" > </text>
<text id="unzoom" x="10.00" y="24" class="hide">Reset Zoom</text>
<text id="search" x="1090.00" y="24" >Search</text>
<text id="ignorecase" x="1174.00" y="24" >ic</text>
<text id="matched" x="1090.00" y="501" > </text>
<g id="frames">
<g >
<title>rcu_all_qs (156 samples, 0.03%)</title><rect x="1129.7" y="229" width="0.3" height="15.0" fill="rgb(205,206,14)" rx="2" ry="2" />
<text  x="1132.66" y="239.5" ></text>
</g>
<g >
<title>arch_local_irq_enable (389 samples, 0.07%)</title><rect x="1186.6" y="325" width="0.8" height="15.0" fill="rgb(248,155,47)" rx="2" ry="2" />
<text  x="1189.56" y="335.5" ></text>
</g>
<g >
<title>__schedule (394 samples, 0.07%)</title><rect x="1186.6" y="357" width="0.8" height="15.0" fill="rgb(225,190,42)" rx="2" ry="2" />
<text  x="1189.55" y="367.5" ></text>
</g>
<g >
<title>obj_cgroup_uncharge (67 samples, 0.01%)</title><rect x="366.9" y="133" width="0.1" height="15.0" fill="rgb(214,26,1)" rx="2" ry="2" />
<text  x="369.89" y="143.5" ></text>
</g>
<g >
<title>kmalloc_slab (728 samples, 0.14%)</title><rect x="867.2" y="181" width="1.6" height="15.0" fill="rgb(206,213,47)" rx="2" ry="2" />
<text  x="870.20" y="191.5" ></text>
</g>
<g >
<title>___slab_alloc (62 samples, 0.01%)</title><rect x="866.9" y="181" width="0.2" height="15.0" fill="rgb(241,226,29)" rx="2" ry="2" />
<text  x="869.94" y="191.5" ></text>
</g>
<g >
<title>acpi_idle_enter (4,567 samples, 0.87%)</title><rect x="1176.3" y="341" width="10.2" height="15.0" fill="rgb(250,140,0)" rx="2" ry="2" />
<text  x="1179.26" y="351.5" ></text>
</g>
<g >
<title>cpu_startup_entry (1,056 samples, 0.20%)</title><rect x="1187.6" y="341" width="2.4" height="15.0" fill="rgb(235,152,46)" rx="2" ry="2" />
<text  x="1190.59" y="351.5" ></text>
</g>
<g >
<title>security_file_permission (3,332 samples, 0.63%)</title><rect x="1133.2" y="293" width="7.5" height="15.0" fill="rgb(235,107,15)" rx="2" ry="2" />
<text  x="1136.17" y="303.5" ></text>
</g>
<g >
<title>_ZN6icu_6722RuleBasedBreakIterator10handleNextEv (398 samples, 0.08%)</title><rect x="1172.4" y="389" width="0.8" height="15.0" fill="rgb(235,6,1)" rx="2" ry="2" />
<text  x="1175.35" y="399.5" ></text>
</g>
<g >
<title>mutex_unlock (1,392 samples, 0.26%)</title><rect x="182.2" y="245" width="3.1" height="15.0" fill="rgb(224,95,46)" rx="2" ry="2" />
<text  x="185.22" y="255.5" ></text>
</g>
<g >
<title>ext4_file_write_iter (97 samples, 0.02%)</title><rect x="1173.3" y="325" width="0.2" height="15.0" fill="rgb(251,208,35)" rx="2" ry="2" />
<text  x="1176.32" y="335.5" ></text>
</g>
<g >
<title>asm_sysvec_reschedule_ipi (171 samples, 0.03%)</title><rect x="690.9" y="389" width="0.4" height="15.0" fill="rgb(245,45,46)" rx="2" ry="2" />
<text  x="693.94" y="399.5" ></text>
</g>
<g >
<title>[libsqlite3.so.0.8.6] (60 samples, 0.01%)</title><rect x="1170.0" y="389" width="0.1" height="15.0" fill="rgb(244,87,1)" rx="2" ry="2" />
<text  x="1172.95" y="399.5" ></text>
</g>
<g >
<title>setup_object.isra.0 (68 samples, 0.01%)</title><rect x="890.5" y="133" width="0.1" height="15.0" fill="rgb(231,128,28)" rx="2" ry="2" />
<text  x="893.46" y="143.5" ></text>
</g>
<g >
<title>cmpxchg_double_slab.constprop.0.isra.0 (151 samples, 0.03%)</title><rect x="308.3" y="149" width="0.3" height="15.0" fill="rgb(205,195,24)" rx="2" ry="2" />
<text  x="311.28" y="159.5" ></text>
</g>
<g >
<title>__cond_resched (103 samples, 0.02%)</title><rect x="756.2" y="213" width="0.2" height="15.0" fill="rgb(206,198,33)" rx="2" ry="2" />
<text  x="759.19" y="223.5" ></text>
</g>
<g >
<title>slab_alloc_node.constprop.0 (29,348 samples, 5.58%)</title><rect x="869.6" y="181" width="65.9" height="15.0" fill="rgb(206,209,24)" rx="2" ry="2" />
<text  x="872.61" y="191.5" >slab_al..</text>
</g>
<g >
<title>pfmemalloc_match_unsafe (200 samples, 0.04%)</title><rect x="967.6" y="165" width="0.5" height="15.0" fill="rgb(247,91,25)" rx="2" ry="2" />
<text  x="970.62" y="175.5" ></text>
</g>
<g >
<title>slab_want_init_on_alloc (58 samples, 0.01%)</title><rect x="1005.0" y="165" width="0.2" height="15.0" fill="rgb(211,163,16)" rx="2" ry="2" />
<text  x="1008.04" y="175.5" ></text>
</g>
<g >
<title>kmem_cache_debug_flags (257 samples, 0.05%)</title><rect x="243.4" y="133" width="0.6" height="15.0" fill="rgb(228,192,29)" rx="2" ry="2" />
<text  x="246.38" y="143.5" ></text>
</g>
<g >
<title>slab_want_init_on_alloc (78 samples, 0.01%)</title><rect x="935.0" y="165" width="0.2" height="15.0" fill="rgb(231,135,7)" rx="2" ry="2" />
<text  x="938.02" y="175.5" ></text>
</g>
<g >
<title>get_obj_cgroup_from_current (119 samples, 0.02%)</title><rect x="914.4" y="149" width="0.3" height="15.0" fill="rgb(215,46,7)" rx="2" ry="2" />
<text  x="917.40" y="159.5" ></text>
</g>
<g >
<title>freelist_dereference.isra.0 (373 samples, 0.07%)</title><rect x="380.8" y="117" width="0.8" height="15.0" fill="rgb(235,7,53)" rx="2" ry="2" />
<text  x="383.78" y="127.5" ></text>
</g>
<g >
<title>skb_unlink (88 samples, 0.02%)</title><rect x="185.5" y="245" width="0.2" height="15.0" fill="rgb(225,8,53)" rx="2" ry="2" />
<text  x="188.52" y="255.5" ></text>
</g>
<g >
<title>kmem_cache_debug_flags (49 samples, 0.01%)</title><rect x="331.7" y="101" width="0.1" height="15.0" fill="rgb(225,211,33)" rx="2" ry="2" />
<text  x="334.67" y="111.5" ></text>
</g>
<g >
<title>__check_heap_object (2,713 samples, 0.52%)</title><rect x="523.1" y="149" width="6.1" height="15.0" fill="rgb(234,219,24)" rx="2" ry="2" />
<text  x="526.09" y="159.5" ></text>
</g>
<g >
<title>hackbench (514,837 samples, 97.93%)</title><rect x="10.3" y="453" width="1155.5" height="15.0" fill="rgb(230,189,31)" rx="2" ry="2" />
<text  x="13.26" y="463.5" >hackbench</text>
</g>
<g >
<title>_raw_spin_unlock_irqrestore (1,576 samples, 0.30%)</title><rect x="411.4" y="213" width="3.6" height="15.0" fill="rgb(247,52,28)" rx="2" ry="2" />
<text  x="414.45" y="223.5" ></text>
</g>
<g >
<title>aa_sk_perm (261 samples, 0.05%)</title><rect x="165.3" y="245" width="0.6" height="15.0" fill="rgb(245,130,35)" rx="2" ry="2" />
<text  x="168.29" y="255.5" ></text>
</g>
<g >
<title>ksys_write (198,539 samples, 37.76%)</title><rect x="698.0" y="341" width="445.6" height="15.0" fill="rgb(253,141,40)" rx="2" ry="2" />
<text  x="701.01" y="351.5" >ksys_write</text>
</g>
<g >
<title>set_freepointer (304 samples, 0.06%)</title><rect x="283.1" y="149" width="0.7" height="15.0" fill="rgb(220,3,4)" rx="2" ry="2" />
<text  x="286.09" y="159.5" ></text>
</g>
<g >
<title>asm_sysvec_reschedule_ipi (49 samples, 0.01%)</title><rect x="1168.9" y="405" width="0.1" height="15.0" fill="rgb(249,48,32)" rx="2" ry="2" />
<text  x="1171.87" y="415.5" ></text>
</g>
<g >
<title>get_freepointer.isra.0 (102 samples, 0.02%)</title><rect x="276.3" y="165" width="0.3" height="15.0" fill="rgb(231,154,32)" rx="2" ry="2" />
<text  x="279.33" y="175.5" ></text>
</g>
<g >
<title>schedule_idle (399 samples, 0.08%)</title><rect x="1186.5" y="373" width="0.9" height="15.0" fill="rgb(253,15,52)" rx="2" ry="2" />
<text  x="1189.54" y="383.5" ></text>
</g>
<g >
<title>__slub_debug_enabled (81 samples, 0.02%)</title><rect x="243.2" y="133" width="0.2" height="15.0" fill="rgb(249,138,33)" rx="2" ry="2" />
<text  x="246.19" y="143.5" ></text>
</g>
<g >
<title>node_match (84 samples, 0.02%)</title><rect x="869.4" y="181" width="0.2" height="15.0" fill="rgb(226,213,35)" rx="2" ry="2" />
<text  x="872.42" y="191.5" ></text>
</g>
<g >
<title>__build_skb_around (3,526 samples, 0.67%)</title><rect x="857.0" y="197" width="7.9" height="15.0" fill="rgb(224,116,5)" rx="2" ry="2" />
<text  x="860.01" y="207.5" ></text>
</g>
<g >
<title>rcu_all_qs (151 samples, 0.03%)</title><rect x="410.7" y="213" width="0.3" height="15.0" fill="rgb(220,211,32)" rx="2" ry="2" />
<text  x="413.67" y="223.5" ></text>
</g>
<g >
<title>get_freepointer_safe.isra.0 (51 samples, 0.01%)</title><rect x="867.1" y="181" width="0.1" height="15.0" fill="rgb(232,18,21)" rx="2" ry="2" />
<text  x="870.08" y="191.5" ></text>
</g>
<g >
<title>page_counter_cancel (1,739 samples, 0.33%)</title><rect x="267.6" y="69" width="3.9" height="15.0" fill="rgb(235,145,26)" rx="2" ry="2" />
<text  x="270.64" y="79.5" ></text>
</g>
<g >
<title>mod_objcg_state (99 samples, 0.02%)</title><rect x="911.9" y="149" width="0.2" height="15.0" fill="rgb(216,55,7)" rx="2" ry="2" />
<text  x="914.88" y="159.5" ></text>
</g>
<g >
<title>rcu_all_qs (305 samples, 0.06%)</title><rect x="169.8" y="213" width="0.7" height="15.0" fill="rgb(237,175,11)" rx="2" ry="2" />
<text  x="172.79" y="223.5" ></text>
</g>
<g >
<title>alloc_skb_with_frags (114 samples, 0.02%)</title><rect x="780.6" y="245" width="0.2" height="15.0" fill="rgb(254,60,13)" rx="2" ry="2" />
<text  x="783.58" y="255.5" ></text>
</g>
<g >
<title>security_socket_recvmsg (110 samples, 0.02%)</title><rect x="160.0" y="277" width="0.3" height="15.0" fill="rgb(230,209,29)" rx="2" ry="2" />
<text  x="163.03" y="287.5" ></text>
</g>
<g >
<title>__pv_queued_spin_lock_slowpath (48 samples, 0.01%)</title><rect x="212.2" y="213" width="0.1" height="15.0" fill="rgb(209,188,22)" rx="2" ry="2" />
<text  x="215.16" y="223.5" ></text>
</g>
<g >
<title>obj_cgroup_charge (56 samples, 0.01%)</title><rect x="1004.4" y="149" width="0.1" height="15.0" fill="rgb(217,4,3)" rx="2" ry="2" />
<text  x="1007.35" y="159.5" ></text>
</g>
<g >
<title>simple_copy_to_iter (24,066 samples, 4.58%)</title><rect x="508.1" y="181" width="54.0" height="15.0" fill="rgb(227,228,51)" rx="2" ry="2" />
<text  x="511.12" y="191.5" >simpl..</text>
</g>
<g >
<title>__wake_up_sync_key (41,932 samples, 7.98%)</title><rect x="1033.9" y="229" width="94.2" height="15.0" fill="rgb(252,172,46)" rx="2" ry="2" />
<text  x="1036.94" y="239.5" >__wake_up_s..</text>
</g>
<g >
<title>__wake_up_sync_key (115 samples, 0.02%)</title><rect x="778.5" y="245" width="0.2" height="15.0" fill="rgb(208,204,17)" rx="2" ry="2" />
<text  x="781.48" y="255.5" ></text>
</g>
<g >
<title>_raw_spin_lock_irqsave (122 samples, 0.02%)</title><rect x="411.2" y="213" width="0.2" height="15.0" fill="rgb(254,183,16)" rx="2" ry="2" />
<text  x="414.17" y="223.5" ></text>
</g>
<g >
<title>slab_ksize (1,064 samples, 0.20%)</title><rect x="1007.6" y="181" width="2.4" height="15.0" fill="rgb(245,134,45)" rx="2" ry="2" />
<text  x="1010.64" y="191.5" ></text>
</g>
<g >
<title>kmem_cache_has_cpu_partial (104 samples, 0.02%)</title><rect x="331.6" y="133" width="0.2" height="15.0" fill="rgb(237,188,34)" rx="2" ry="2" />
<text  x="334.60" y="143.5" ></text>
</g>
<g >
<title>set_freepointer (200 samples, 0.04%)</title><rect x="381.9" y="133" width="0.5" height="15.0" fill="rgb(232,102,22)" rx="2" ry="2" />
<text  x="384.95" y="143.5" ></text>
</g>
<g >
<title>__x64_sys_write (856 samples, 0.16%)</title><rect x="691.3" y="373" width="1.9" height="15.0" fill="rgb(243,165,36)" rx="2" ry="2" />
<text  x="694.33" y="383.5" ></text>
</g>
<g >
<title>_copy_from_iter (132 samples, 0.03%)</title><rect x="778.7" y="245" width="0.3" height="15.0" fill="rgb(221,151,1)" rx="2" ry="2" />
<text  x="781.74" y="255.5" ></text>
</g>
<g >
<title>arch_local_irq_enable (2,522 samples, 0.48%)</title><rect x="1159.3" y="277" width="5.7" height="15.0" fill="rgb(233,118,26)" rx="2" ry="2" />
<text  x="1162.31" y="287.5" ></text>
</g>
<g >
<title>sysvec_reschedule_ipi (441 samples, 0.08%)</title><rect x="118.8" y="373" width="1.0" height="15.0" fill="rgb(210,181,3)" rx="2" ry="2" />
<text  x="121.80" y="383.5" ></text>
</g>
<g >
<title>slab_pre_alloc_hook.constprop.0 (299 samples, 0.06%)</title><rect x="1005.8" y="181" width="0.6" height="15.0" fill="rgb(227,30,0)" rx="2" ry="2" />
<text  x="1008.77" y="191.5" ></text>
</g>
<g >
<title>arch_local_irq_enable (1,800 samples, 0.34%)</title><rect x="1014.7" y="165" width="4.1" height="15.0" fill="rgb(240,191,21)" rx="2" ry="2" />
<text  x="1017.75" y="175.5" ></text>
</g>
<g >
<title>mod_objcg_state (63 samples, 0.01%)</title><rect x="272.4" y="149" width="0.2" height="15.0" fill="rgb(252,196,23)" rx="2" ry="2" />
<text  x="275.44" y="159.5" ></text>
</g>
<g >
<title>rcu_read_unlock_strict (46 samples, 0.01%)</title><rect x="572.6" y="245" width="0.1" height="15.0" fill="rgb(209,20,13)" rx="2" ry="2" />
<text  x="575.59" y="255.5" ></text>
</g>
<g >
<title>obj_cgroup_charge (89 samples, 0.02%)</title><rect x="934.2" y="149" width="0.2" height="15.0" fill="rgb(213,209,29)" rx="2" ry="2" />
<text  x="937.17" y="159.5" ></text>
</g>
<g >
<title>slab_alloc_node.constprop.0 (831 samples, 0.16%)</title><rect x="1010.0" y="197" width="1.9" height="15.0" fill="rgb(252,87,16)" rx="2" ry="2" />
<text  x="1013.03" y="207.5" ></text>
</g>
<g >
<title>next_tid (148 samples, 0.03%)</title><rect x="869.1" y="181" width="0.3" height="15.0" fill="rgb(208,26,15)" rx="2" ry="2" />
<text  x="872.09" y="191.5" ></text>
</g>
<g >
<title>aa_sk_perm (1,867 samples, 0.36%)</title><rect x="166.3" y="229" width="4.2" height="15.0" fill="rgb(212,135,50)" rx="2" ry="2" />
<text  x="169.28" y="239.5" ></text>
</g>
<g >
<title>page_counter_uncharge (3,502 samples, 0.67%)</title><rect x="357.5" y="69" width="7.9" height="15.0" fill="rgb(251,156,53)" rx="2" ry="2" />
<text  x="360.50" y="79.5" ></text>
</g>
<g >
<title>[libicuuc.so.67.1] (105 samples, 0.02%)</title><rect x="1166.1" y="437" width="0.2" height="15.0" fill="rgb(206,151,4)" rx="2" ry="2" />
<text  x="1169.07" y="447.5" ></text>
</g>
<g >
<title>__cond_resched (126 samples, 0.02%)</title><rect x="166.0" y="229" width="0.3" height="15.0" fill="rgb(253,18,46)" rx="2" ry="2" />
<text  x="169.00" y="239.5" ></text>
</g>
<g >
<title>try_charge_memcg (61 samples, 0.01%)</title><rect x="933.5" y="117" width="0.1" height="15.0" fill="rgb(239,197,6)" rx="2" ry="2" />
<text  x="936.49" y="127.5" ></text>
</g>
<g >
<title>__virt_addr_valid (2,002 samples, 0.38%)</title><rect x="529.2" y="149" width="4.5" height="15.0" fill="rgb(209,116,0)" rx="2" ry="2" />
<text  x="532.18" y="159.5" ></text>
</g>
<g >
<title>mod_objcg_state (1,773 samples, 0.34%)</title><rect x="349.7" y="117" width="4.0" height="15.0" fill="rgb(246,49,10)" rx="2" ry="2" />
<text  x="352.68" y="127.5" ></text>
</g>
<g >
<title>__cond_resched (125 samples, 0.02%)</title><rect x="169.5" y="213" width="0.3" height="15.0" fill="rgb(206,164,21)" rx="2" ry="2" />
<text  x="172.51" y="223.5" ></text>
</g>
<g >
<title>__slub_debug_enabled (48 samples, 0.01%)</title><rect x="243.8" y="117" width="0.2" height="15.0" fill="rgb(253,77,38)" rx="2" ry="2" />
<text  x="246.84" y="127.5" ></text>
</g>
<g >
<title>skb_release_data (38,355 samples, 7.30%)</title><rect x="297.1" y="213" width="86.1" height="15.0" fill="rgb(253,215,32)" rx="2" ry="2" />
<text  x="300.12" y="223.5" >skb_releas..</text>
</g>
<g >
<title>uiter_next32_67 (181 samples, 0.03%)</title><rect x="1171.5" y="405" width="0.4" height="15.0" fill="rgb(215,132,0)" rx="2" ry="2" />
<text  x="1174.47" y="415.5" ></text>
</g>
<g >
<title>_ZN6icu_6722RuleBasedBreakIterator10handleNextEv (52 samples, 0.01%)</title><rect x="1174.9" y="437" width="0.1" height="15.0" fill="rgb(219,20,34)" rx="2" ry="2" />
<text  x="1177.87" y="447.5" ></text>
</g>
<g >
<title>sock_write_iter (571 samples, 0.11%)</title><rect x="1142.3" y="309" width="1.3" height="15.0" fill="rgb(207,123,28)" rx="2" ry="2" />
<text  x="1145.35" y="319.5" ></text>
</g>
<g >
<title>get_partial_node.part.0 (2,657 samples, 0.51%)</title><rect x="884.2" y="149" width="6.0" height="15.0" fill="rgb(253,180,13)" rx="2" ry="2" />
<text  x="887.20" y="159.5" ></text>
</g>
<g >
<title>native_safe_halt (924 samples, 0.18%)</title><rect x="1187.7" y="261" width="2.0" height="15.0" fill="rgb(227,171,10)" rx="2" ry="2" />
<text  x="1190.67" y="271.5" ></text>
</g>
<g >
<title>security_socket_getpeersec_dgram (114 samples, 0.02%)</title><rect x="750.1" y="261" width="0.3" height="15.0" fill="rgb(225,198,44)" rx="2" ry="2" />
<text  x="753.14" y="271.5" ></text>
</g>
<g >
<title>refill_obj_stock (5,499 samples, 1.05%)</title><rect x="354.1" y="101" width="12.3" height="15.0" fill="rgb(234,144,16)" rx="2" ry="2" />
<text  x="357.10" y="111.5" ></text>
</g>
<g >
<title>maybe_add_creds (114 samples, 0.02%)</title><rect x="749.7" y="261" width="0.3" height="15.0" fill="rgb(220,39,49)" rx="2" ry="2" />
<text  x="752.74" y="271.5" ></text>
</g>
<g >
<title>_copy_from_iter (2,643 samples, 0.50%)</title><rect x="803.0" y="229" width="6.0" height="15.0" fill="rgb(251,128,21)" rx="2" ry="2" />
<text  x="806.04" y="239.5" ></text>
</g>
<g >
<title>maybe_add_creds (269 samples, 0.05%)</title><rect x="783.3" y="245" width="0.6" height="15.0" fill="rgb(236,125,38)" rx="2" ry="2" />
<text  x="786.26" y="255.5" ></text>
</g>
<g >
<title>all (525,731 samples, 100%)</title><rect x="10.0" y="469" width="1180.0" height="15.0" fill="rgb(210,196,30)" rx="2" ry="2" />
<text  x="13.00" y="479.5" ></text>
</g>
<g >
<title>page_counter_cancel (3,392 samples, 0.65%)</title><rect x="357.6" y="53" width="7.6" height="15.0" fill="rgb(247,156,44)" rx="2" ry="2" />
<text  x="360.61" y="63.5" ></text>
</g>
<g >
<title>slab_ksize (52 samples, 0.01%)</title><rect x="864.7" y="149" width="0.1" height="15.0" fill="rgb(251,168,10)" rx="2" ry="2" />
<text  x="867.67" y="159.5" ></text>
</g>
<g >
<title>irqentry_exit (49 samples, 0.01%)</title><rect x="1168.9" y="373" width="0.1" height="15.0" fill="rgb(230,156,17)" rx="2" ry="2" />
<text  x="1171.87" y="383.5" ></text>
</g>
<g >
<title>skb_release_head_state (8,898 samples, 1.69%)</title><rect x="383.2" y="213" width="20.0" height="15.0" fill="rgb(238,156,37)" rx="2" ry="2" />
<text  x="386.21" y="223.5" ></text>
</g>
<g >
<title>put_cpu_partial (1,055 samples, 0.20%)</title><rect x="367.4" y="133" width="2.4" height="15.0" fill="rgb(247,204,47)" rx="2" ry="2" />
<text  x="370.43" y="143.5" ></text>
</g>
<g >
<title>__alloc_skb (73,995 samples, 14.07%)</title><rect x="845.8" y="213" width="166.1" height="15.0" fill="rgb(252,223,17)" rx="2" ry="2" />
<text  x="848.81" y="223.5" >__alloc_skb</text>
</g>
<g >
<title>unix_write_space (268 samples, 0.05%)</title><rect x="402.6" y="181" width="0.6" height="15.0" fill="rgb(226,162,12)" rx="2" ry="2" />
<text  x="405.58" y="191.5" ></text>
</g>
<g >
<title>__virt_addr_valid (76 samples, 0.01%)</title><rect x="533.8" y="165" width="0.2" height="15.0" fill="rgb(236,6,43)" rx="2" ry="2" />
<text  x="536.82" y="175.5" ></text>
</g>
<g >
<title>get_freepointer.isra.0 (95 samples, 0.02%)</title><rect x="963.6" y="165" width="0.2" height="15.0" fill="rgb(237,116,25)" rx="2" ry="2" />
<text  x="966.58" y="175.5" ></text>
</g>
<g >
<title>ksys_write (178 samples, 0.03%)</title><rect x="1143.8" y="357" width="0.4" height="15.0" fill="rgb(205,127,6)" rx="2" ry="2" />
<text  x="1146.76" y="367.5" ></text>
</g>
<g >
<title>skb_release_head_state (374 samples, 0.07%)</title><rect x="481.6" y="229" width="0.9" height="15.0" fill="rgb(228,169,41)" rx="2" ry="2" />
<text  x="484.63" y="239.5" ></text>
</g>
<g >
<title>rcu_read_unlock_strict (50 samples, 0.01%)</title><rect x="921.9" y="117" width="0.1" height="15.0" fill="rgb(215,147,54)" rx="2" ry="2" />
<text  x="924.89" y="127.5" ></text>
</g>
<g >
<title>propagate_protected_usage (63 samples, 0.01%)</title><rect x="365.2" y="53" width="0.2" height="15.0" fill="rgb(222,69,21)" rx="2" ry="2" />
<text  x="368.22" y="63.5" ></text>
</g>
<g >
<title>_raw_spin_unlock_irqrestore (515 samples, 0.10%)</title><rect x="1013.0" y="213" width="1.2" height="15.0" fill="rgb(230,145,34)" rx="2" ry="2" />
<text  x="1016.00" y="223.5" ></text>
</g>
<g >
<title>x86_64_start_reservations (1,056 samples, 0.20%)</title><rect x="1187.6" y="405" width="2.4" height="15.0" fill="rgb(207,12,48)" rx="2" ry="2" />
<text  x="1190.59" y="415.5" ></text>
</g>
<g >
<title>__ksize (198 samples, 0.04%)</title><rect x="1007.2" y="181" width="0.4" height="15.0" fill="rgb(227,46,3)" rx="2" ry="2" />
<text  x="1010.20" y="191.5" ></text>
</g>
<g >
<title>schedule (2,653 samples, 0.50%)</title><rect x="1159.0" y="325" width="6.0" height="15.0" fill="rgb(210,120,33)" rx="2" ry="2" />
<text  x="1162.02" y="335.5" ></text>
</g>
<g >
<title>slab_free_freelist_hook (2,735 samples, 0.52%)</title><rect x="277.7" y="165" width="6.2" height="15.0" fill="rgb(250,63,18)" rx="2" ry="2" />
<text  x="280.73" y="175.5" ></text>
</g>
<g >
<title>refill_stock (205 samples, 0.04%)</title><rect x="271.6" y="85" width="0.5" height="15.0" fill="rgb(231,67,45)" rx="2" ry="2" />
<text  x="274.62" y="95.5" ></text>
</g>
<g >
<title>__kmalloc_node_track_caller (165 samples, 0.03%)</title><rect x="1012.1" y="213" width="0.3" height="15.0" fill="rgb(241,91,22)" rx="2" ry="2" />
<text  x="1015.06" y="223.5" ></text>
</g>
<g >
<title>propagate_protected_usage (149 samples, 0.03%)</title><rect x="364.9" y="37" width="0.3" height="15.0" fill="rgb(234,115,42)" rx="2" ry="2" />
<text  x="367.89" y="47.5" ></text>
</g>
<g >
<title>check_stack_object (383 samples, 0.07%)</title><rect x="539.8" y="165" width="0.9" height="15.0" fill="rgb(228,35,33)" rx="2" ry="2" />
<text  x="542.82" y="175.5" ></text>
</g>
<g >
<title>obj_cgroup_uncharge_pages (178 samples, 0.03%)</title><rect x="353.7" y="101" width="0.4" height="15.0" fill="rgb(239,28,52)" rx="2" ry="2" />
<text  x="356.70" y="111.5" ></text>
</g>
<g >
<title>schedule (1,946 samples, 0.37%)</title><rect x="1014.4" y="213" width="4.4" height="15.0" fill="rgb(245,95,27)" rx="2" ry="2" />
<text  x="1017.42" y="223.5" ></text>
</g>
<g >
<title>rcu_read_unlock_strict (70 samples, 0.01%)</title><rect x="783.9" y="245" width="0.1" height="15.0" fill="rgb(214,102,24)" rx="2" ry="2" />
<text  x="786.87" y="255.5" ></text>
</g>
<g >
<title>put_pid (118 samples, 0.02%)</title><rect x="415.0" y="229" width="0.3" height="15.0" fill="rgb(246,81,8)" rx="2" ry="2" />
<text  x="417.99" y="239.5" ></text>
</g>
<g >
<title>slab_free_hook (98 samples, 0.02%)</title><rect x="283.9" y="165" width="0.2" height="15.0" fill="rgb(215,174,9)" rx="2" ry="2" />
<text  x="286.87" y="175.5" ></text>
</g>
<g >
<title>irqentry_exit (441 samples, 0.08%)</title><rect x="118.8" y="357" width="1.0" height="15.0" fill="rgb(231,203,50)" rx="2" ry="2" />
<text  x="121.80" y="367.5" ></text>
</g>
<g >
<title>refill_obj_stock (2,803 samples, 0.53%)</title><rect x="265.9" y="117" width="6.3" height="15.0" fill="rgb(225,12,40)" rx="2" ry="2" />
<text  x="268.87" y="127.5" ></text>
</g>
<g >
<title>kmem_cache_debug (407 samples, 0.08%)</title><rect x="330.5" y="133" width="0.9" height="15.0" fill="rgb(253,220,21)" rx="2" ry="2" />
<text  x="333.50" y="143.5" ></text>
</g>
<g >
<title>arch_local_irq_enable (27,080 samples, 5.15%)</title><rect x="418.5" y="165" width="60.8" height="15.0" fill="rgb(224,49,37)" rx="2" ry="2" />
<text  x="421.54" y="175.5" >arch_l..</text>
</g>
<g >
<title>check_stack_object (433 samples, 0.08%)</title><rect x="809.0" y="229" width="0.9" height="15.0" fill="rgb(235,84,16)" rx="2" ry="2" />
<text  x="811.97" y="239.5" ></text>
</g>
<g >
<title>mod_objcg_state (63 samples, 0.01%)</title><rect x="366.7" y="133" width="0.2" height="15.0" fill="rgb(239,219,38)" rx="2" ry="2" />
<text  x="369.74" y="143.5" ></text>
</g>
<g >
<title>kmem_cache_debug_flags (82 samples, 0.02%)</title><rect x="244.0" y="149" width="0.1" height="15.0" fill="rgb(215,103,16)" rx="2" ry="2" />
<text  x="246.95" y="159.5" ></text>
</g>
<g >
<title>slab_post_alloc_hook (7,166 samples, 1.36%)</title><rect x="896.5" y="165" width="16.1" height="15.0" fill="rgb(236,129,5)" rx="2" ry="2" />
<text  x="899.47" y="175.5" ></text>
</g>
<g >
<title>native_safe_halt (4,555 samples, 0.87%)</title><rect x="1176.3" y="325" width="10.2" height="15.0" fill="rgb(228,59,47)" rx="2" ry="2" />
<text  x="1179.29" y="335.5" ></text>
</g>
<g >
<title>unix_stream_recvmsg (174,435 samples, 33.18%)</title><rect x="170.8" y="261" width="391.6" height="15.0" fill="rgb(240,112,8)" rx="2" ry="2" />
<text  x="173.85" y="271.5" >unix_stream_recvmsg</text>
</g>
<g >
<title>rcu_read_unlock_strict (50 samples, 0.01%)</title><rect x="1140.5" y="261" width="0.2" height="15.0" fill="rgb(247,105,54)" rx="2" ry="2" />
<text  x="1143.54" y="271.5" ></text>
</g>
<g >
<title>do_syscall_64 (210,190 samples, 39.98%)</title><rect x="693.2" y="373" width="471.8" height="15.0" fill="rgb(237,224,18)" rx="2" ry="2" />
<text  x="696.25" y="383.5" >do_syscall_64</text>
</g>
<g >
<title>cache_vmstat_idx.isra.0 (153 samples, 0.03%)</title><rect x="231.0" y="149" width="0.3" height="15.0" fill="rgb(231,112,26)" rx="2" ry="2" />
<text  x="233.98" y="159.5" ></text>
</g>
<g >
<title>memcg_slab_post_alloc_hook (5,840 samples, 1.11%)</title><rect x="898.8" y="149" width="13.1" height="15.0" fill="rgb(234,229,46)" rx="2" ry="2" />
<text  x="901.78" y="159.5" ></text>
</g>
<g >
<title>acpi_idle_enter (930 samples, 0.18%)</title><rect x="1187.7" y="277" width="2.0" height="15.0" fill="rgb(210,181,11)" rx="2" ry="2" />
<text  x="1190.66" y="287.5" ></text>
</g>
<g >
<title>slab_want_init_on_free (54 samples, 0.01%)</title><rect x="382.8" y="149" width="0.1" height="15.0" fill="rgb(244,29,48)" rx="2" ry="2" />
<text  x="385.77" y="159.5" ></text>
</g>
<g >
<title>___slab_alloc (48 samples, 0.01%)</title><rect x="941.1" y="181" width="0.1" height="15.0" fill="rgb(216,219,13)" rx="2" ry="2" />
<text  x="944.13" y="191.5" ></text>
</g>
<g >
<title>alloc_skb_with_frags (75,345 samples, 14.33%)</title><rect x="843.8" y="229" width="169.1" height="15.0" fill="rgb(214,76,46)" rx="2" ry="2" />
<text  x="846.82" y="239.5" >alloc_skb_with_frags</text>
</g>
<g >
<title>_ZN6icu_6722RuleBasedBreakIterator10BreakCacheD0Ev (129 samples, 0.02%)</title><rect x="1172.1" y="421" width="0.2" height="15.0" fill="rgb(238,189,49)" rx="2" ry="2" />
<text  x="1175.06" y="431.5" ></text>
</g>
<g >
<title>rcu_read_unlock_strict (51 samples, 0.01%)</title><rect x="1140.4" y="245" width="0.1" height="15.0" fill="rgb(251,191,52)" rx="2" ry="2" />
<text  x="1143.43" y="255.5" ></text>
</g>
<g >
<title>next_tid (79 samples, 0.02%)</title><rect x="941.6" y="181" width="0.2" height="15.0" fill="rgb(206,102,15)" rx="2" ry="2" />
<text  x="944.57" y="191.5" ></text>
</g>
<g >
<title>skb_put (50 samples, 0.01%)</title><rect x="820.0" y="245" width="0.1" height="15.0" fill="rgb(240,83,16)" rx="2" ry="2" />
<text  x="823.02" y="255.5" ></text>
</g>
<g >
<title>cpuidle_enter (942 samples, 0.18%)</title><rect x="1187.6" y="309" width="2.1" height="15.0" fill="rgb(215,150,11)" rx="2" ry="2" />
<text  x="1190.63" y="319.5" ></text>
</g>
<g >
<title>maybe_wipe_obj_freeptr (115 samples, 0.02%)</title><rect x="868.8" y="181" width="0.3" height="15.0" fill="rgb(213,116,12)" rx="2" ry="2" />
<text  x="871.83" y="191.5" ></text>
</g>
<g >
<title>_raw_spin_unlock_irqrestore (8,895 samples, 1.69%)</title><rect x="483.8" y="213" width="19.9" height="15.0" fill="rgb(229,83,8)" rx="2" ry="2" />
<text  x="486.78" y="223.5" ></text>
</g>
<g >
<title>ucnv_createConverterFromSharedData_67 (63 samples, 0.01%)</title><rect x="1174.5" y="421" width="0.2" height="15.0" fill="rgb(222,176,23)" rx="2" ry="2" />
<text  x="1177.54" y="431.5" ></text>
</g>
<g >
<title>sysvec_reschedule_ipi (55 samples, 0.01%)</title><rect x="1167.3" y="405" width="0.1" height="15.0" fill="rgb(221,105,42)" rx="2" ry="2" />
<text  x="1170.27" y="415.5" ></text>
</g>
<g >
<title>_raw_spin_lock_irqsave (431 samples, 0.08%)</title><rect x="820.5" y="229" width="1.0" height="15.0" fill="rgb(235,26,37)" rx="2" ry="2" />
<text  x="823.53" y="239.5" ></text>
</g>
<g >
<title>schedule_timeout (28,522 samples, 5.43%)</title><rect x="415.3" y="229" width="64.0" height="15.0" fill="rgb(240,188,47)" rx="2" ry="2" />
<text  x="418.32" y="239.5" >schedul..</text>
</g>
<g >
<title>obj_cgroup_charge (5,182 samples, 0.99%)</title><rect x="922.0" y="133" width="11.6" height="15.0" fill="rgb(215,186,11)" rx="2" ry="2" />
<text  x="925.00" y="143.5" ></text>
</g>
<g >
<title>get_obj_cgroup_from_current (139 samples, 0.03%)</title><rect x="987.8" y="149" width="0.3" height="15.0" fill="rgb(252,54,8)" rx="2" ry="2" />
<text  x="990.75" y="159.5" ></text>
</g>
<g >
<title>wait_for_unix_gc (166 samples, 0.03%)</title><rect x="1130.0" y="261" width="0.4" height="15.0" fill="rgb(248,17,26)" rx="2" ry="2" />
<text  x="1133.01" y="271.5" ></text>
</g>
<g >
<title>security_file_permission (4,331 samples, 0.82%)</title><rect x="565.0" y="293" width="9.8" height="15.0" fill="rgb(247,156,9)" rx="2" ry="2" />
<text  x="568.03" y="303.5" ></text>
</g>
<g >
<title>__slub_debug_enabled (68 samples, 0.01%)</title><rect x="331.3" y="101" width="0.1" height="15.0" fill="rgb(214,76,53)" rx="2" ry="2" />
<text  x="334.26" y="111.5" ></text>
</g>
<g >
<title>freelist_dereference.isra.0 (150 samples, 0.03%)</title><rect x="281.7" y="149" width="0.3" height="15.0" fill="rgb(209,229,41)" rx="2" ry="2" />
<text  x="284.67" y="159.5" ></text>
</g>
<g >
<title>__check_object_size (101 samples, 0.02%)</title><rect x="774.4" y="245" width="0.2" height="15.0" fill="rgb(206,16,6)" rx="2" ry="2" />
<text  x="777.38" y="255.5" ></text>
</g>
<g >
<title>set_freepointer (249 samples, 0.05%)</title><rect x="371.6" y="149" width="0.6" height="15.0" fill="rgb(228,106,13)" rx="2" ry="2" />
<text  x="374.61" y="159.5" ></text>
</g>
<g >
<title>memcg_slab_pre_alloc_hook (7,257 samples, 1.38%)</title><rect x="988.1" y="149" width="16.3" height="15.0" fill="rgb(222,151,54)" rx="2" ry="2" />
<text  x="991.07" y="159.5" ></text>
</g>
<g >
<title>slab_free_freelist_hook (4,610 samples, 0.88%)</title><rect x="372.2" y="149" width="10.3" height="15.0" fill="rgb(229,206,40)" rx="2" ry="2" />
<text  x="375.17" y="159.5" ></text>
</g>
<g >
<title>propagate_protected_usage (64 samples, 0.01%)</title><rect x="271.4" y="53" width="0.1" height="15.0" fill="rgb(245,19,1)" rx="2" ry="2" />
<text  x="274.40" y="63.5" ></text>
</g>
<g >
<title>get_freepointer.isra.0 (567 samples, 0.11%)</title><rect x="380.7" y="133" width="1.2" height="15.0" fill="rgb(251,78,35)" rx="2" ry="2" />
<text  x="383.68" y="143.5" ></text>
</g>
<g >
<title>rcu_read_unlock_strict (52 samples, 0.01%)</title><rect x="996.9" y="117" width="0.1" height="15.0" fill="rgb(238,88,8)" rx="2" ry="2" />
<text  x="999.87" y="127.5" ></text>
</g>
<g >
<title>skb_copy_datagram_iter (25,687 samples, 4.89%)</title><rect x="504.7" y="213" width="57.7" height="15.0" fill="rgb(223,19,10)" rx="2" ry="2" />
<text  x="507.71" y="223.5" >skb_co..</text>
</g>
<g >
<title>mutex_lock (1,962 samples, 0.37%)</title><rect x="406.6" y="229" width="4.4" height="15.0" fill="rgb(222,57,31)" rx="2" ry="2" />
<text  x="409.61" y="239.5" ></text>
</g>
<g >
<title>schedule_timeout (2,060 samples, 0.39%)</title><rect x="1014.2" y="229" width="4.6" height="15.0" fill="rgb(233,190,34)" rx="2" ry="2" />
<text  x="1017.16" y="239.5" ></text>
</g>
<g >
<title>_raw_spin_lock_irqsave (74 samples, 0.01%)</title><rect x="780.3" y="245" width="0.2" height="15.0" fill="rgb(231,97,49)" rx="2" ry="2" />
<text  x="783.33" y="255.5" ></text>
</g>
<g >
<title>memcg_slab_pre_alloc_hook (146 samples, 0.03%)</title><rect x="895.1" y="165" width="0.3" height="15.0" fill="rgb(253,40,11)" rx="2" ry="2" />
<text  x="898.08" y="175.5" ></text>
</g>
<g >
<title>new_slab (143 samples, 0.03%)</title><rect x="962.6" y="149" width="0.3" height="15.0" fill="rgb(229,25,13)" rx="2" ry="2" />
<text  x="965.61" y="159.5" ></text>
</g>
<g >
<title>copy_user_enhanced_fast_string (9,559 samples, 1.82%)</title><rect x="540.7" y="165" width="21.4" height="15.0" fill="rgb(248,126,6)" rx="2" ry="2" />
<text  x="543.68" y="175.5" >c..</text>
</g>
<g >
<title>slab_want_init_on_alloc (155 samples, 0.03%)</title><rect x="1006.4" y="181" width="0.4" height="15.0" fill="rgb(215,42,42)" rx="2" ry="2" />
<text  x="1009.45" y="191.5" ></text>
</g>
<g >
<title>maybe_wipe_obj_freeptr (293 samples, 0.06%)</title><rect x="894.0" y="165" width="0.7" height="15.0" fill="rgb(242,85,16)" rx="2" ry="2" />
<text  x="897.01" y="175.5" ></text>
</g>
<g >
<title>do_idle (5,181 samples, 0.99%)</title><rect x="1175.9" y="389" width="11.7" height="15.0" fill="rgb(235,132,52)" rx="2" ry="2" />
<text  x="1178.92" y="399.5" ></text>
</g>
<g >
<title>freelist_dereference.isra.0 (122 samples, 0.02%)</title><rect x="965.1" y="133" width="0.3" height="15.0" fill="rgb(253,101,41)" rx="2" ry="2" />
<text  x="968.13" y="143.5" ></text>
</g>
<g >
<title>apparmor_file_permission (2,610 samples, 0.50%)</title><rect x="567.0" y="277" width="5.8" height="15.0" fill="rgb(253,164,12)" rx="2" ry="2" />
<text  x="569.95" y="287.5" ></text>
</g>
<g >
<title>irqentry_exit_to_user_mode (49 samples, 0.01%)</title><rect x="1168.9" y="357" width="0.1" height="15.0" fill="rgb(228,120,1)" rx="2" ry="2" />
<text  x="1171.87" y="367.5" ></text>
</g>
<g >
<title>should_failslab (585 samples, 0.11%)</title><rect x="968.1" y="165" width="1.3" height="15.0" fill="rgb(233,48,30)" rx="2" ry="2" />
<text  x="971.07" y="175.5" ></text>
</g>
<g >
<title>simple_copy_to_iter (101 samples, 0.02%)</title><rect x="562.1" y="197" width="0.3" height="15.0" fill="rgb(220,60,32)" rx="2" ry="2" />
<text  x="565.14" y="207.5" ></text>
</g>
<g >
<title>rcu_read_unlock_strict (49 samples, 0.01%)</title><rect x="911.8" y="133" width="0.1" height="15.0" fill="rgb(217,219,48)" rx="2" ry="2" />
<text  x="914.77" y="143.5" ></text>
</g>
<g >
<title>node_match (52 samples, 0.01%)</title><rect x="967.5" y="165" width="0.1" height="15.0" fill="rgb(242,125,20)" rx="2" ry="2" />
<text  x="970.51" y="175.5" ></text>
</g>
<g >
<title>_raw_spin_lock_irqsave (87 samples, 0.02%)</title><rect x="212.3" y="229" width="0.2" height="15.0" fill="rgb(211,34,38)" rx="2" ry="2" />
<text  x="215.26" y="239.5" ></text>
</g>
<g >
<title>skb_copy_datagram_from_iter (85 samples, 0.02%)</title><rect x="757.0" y="261" width="0.2" height="15.0" fill="rgb(226,188,46)" rx="2" ry="2" />
<text  x="759.97" y="271.5" ></text>
</g>
<g >
<title>fsnotify_perm.part.0 (865 samples, 0.16%)</title><rect x="572.8" y="277" width="2.0" height="15.0" fill="rgb(225,39,45)" rx="2" ry="2" />
<text  x="575.81" y="287.5" ></text>
</g>
<g >
<title>obj_cgroup_uncharge_pages (56 samples, 0.01%)</title><rect x="265.7" y="117" width="0.2" height="15.0" fill="rgb(241,134,13)" rx="2" ry="2" />
<text  x="268.75" y="127.5" ></text>
</g>
<g >
<title>[unknown] (1,340 samples, 0.25%)</title><rect x="1169.0" y="421" width="3.0" height="15.0" fill="rgb(227,92,35)" rx="2" ry="2" />
<text  x="1172.03" y="431.5" ></text>
</g>
<g >
<title>refill_stock (424 samples, 0.08%)</title><rect x="365.4" y="69" width="0.9" height="15.0" fill="rgb(213,126,50)" rx="2" ry="2" />
<text  x="368.38" y="79.5" ></text>
</g>
<g >
<title>propagate_protected_usage (63 samples, 0.01%)</title><rect x="1002.9" y="85" width="0.2" height="15.0" fill="rgb(206,27,51)" rx="2" ry="2" />
<text  x="1005.94" y="95.5" ></text>
</g>
<g >
<title>new_sync_read (185,707 samples, 35.32%)</title><rect x="147.0" y="309" width="416.8" height="15.0" fill="rgb(213,207,52)" rx="2" ry="2" />
<text  x="150.00" y="319.5" >new_sync_read</text>
</g>
<g >
<title>rcu_read_unlock_strict (53 samples, 0.01%)</title><rect x="572.7" y="261" width="0.1" height="15.0" fill="rgb(205,8,35)" rx="2" ry="2" />
<text  x="575.69" y="271.5" ></text>
</g>
<g >
<title>slab_want_init_on_free (130 samples, 0.02%)</title><rect x="935.2" y="165" width="0.3" height="15.0" fill="rgb(221,22,4)" rx="2" ry="2" />
<text  x="938.19" y="175.5" ></text>
</g>
<g >
<title>sock_alloc_send_pskb (53 samples, 0.01%)</title><rect x="758.0" y="261" width="0.1" height="15.0" fill="rgb(251,181,44)" rx="2" ry="2" />
<text  x="761.03" y="271.5" ></text>
</g>
<g >
<title>__fdget_pos (238 samples, 0.05%)</title><rect x="133.2" y="325" width="0.5" height="15.0" fill="rgb(248,49,17)" rx="2" ry="2" />
<text  x="136.16" y="335.5" ></text>
</g>
<g >
<title>start_kernel (1,056 samples, 0.20%)</title><rect x="1187.6" y="389" width="2.4" height="15.0" fill="rgb(212,40,6)" rx="2" ry="2" />
<text  x="1190.59" y="399.5" ></text>
</g>
<g >
<title>sock_wfree (495 samples, 0.09%)</title><rect x="384.1" y="197" width="1.1" height="15.0" fill="rgb(212,16,35)" rx="2" ry="2" />
<text  x="387.13" y="207.5" ></text>
</g>
<g >
<title>sock_def_readable (43,756 samples, 8.32%)</title><rect x="1029.9" y="245" width="98.2" height="15.0" fill="rgb(243,102,30)" rx="2" ry="2" />
<text  x="1032.91" y="255.5" >sock_def_re..</text>
</g>
<g >
<title>_ZN6icu_6722RuleBasedBreakIterator4nextEv (62 samples, 0.01%)</title><rect x="1170.5" y="405" width="0.2" height="15.0" fill="rgb(209,17,7)" rx="2" ry="2" />
<text  x="1173.55" y="415.5" ></text>
</g>
<g >
<title>apparmor_file_permission (2,654 samples, 0.50%)</title><rect x="1134.7" y="277" width="6.0" height="15.0" fill="rgb(218,118,19)" rx="2" ry="2" />
<text  x="1137.70" y="287.5" ></text>
</g>
<g >
<title>try_charge_memcg (544 samples, 0.10%)</title><rect x="932.0" y="101" width="1.2" height="15.0" fill="rgb(207,203,31)" rx="2" ry="2" />
<text  x="934.97" y="111.5" ></text>
</g>
<g >
<title>do_slab_free (54 samples, 0.01%)</title><rect x="307.0" y="165" width="0.1" height="15.0" fill="rgb(236,126,15)" rx="2" ry="2" />
<text  x="310.01" y="175.5" ></text>
</g>
<g >
<title>__memmove_avx_unaligned_erms (45 samples, 0.01%)</title><rect x="1175.1" y="437" width="0.1" height="15.0" fill="rgb(208,226,40)" rx="2" ry="2" />
<text  x="1178.05" y="447.5" ></text>
</g>
<g >
<title>memcg_slab_free_hook (157 samples, 0.03%)</title><rect x="371.2" y="149" width="0.4" height="15.0" fill="rgb(228,22,15)" rx="2" ry="2" />
<text  x="374.24" y="159.5" ></text>
</g>
<g >
<title>_raw_spin_lock (6,340 samples, 1.21%)</title><rect x="734.1" y="261" width="14.2" height="15.0" fill="rgb(229,55,46)" rx="2" ry="2" />
<text  x="737.06" y="271.5" ></text>
</g>
<g >
<title>put_pid (64 samples, 0.01%)</title><rect x="750.0" y="261" width="0.1" height="15.0" fill="rgb(228,149,5)" rx="2" ry="2" />
<text  x="753.00" y="271.5" ></text>
</g>
<g >
<title>get_obj_cgroup_from_current (2,287 samples, 0.44%)</title><rect x="916.9" y="133" width="5.1" height="15.0" fill="rgb(209,226,33)" rx="2" ry="2" />
<text  x="919.87" y="143.5" ></text>
</g>
<g >
<title>__schedule (81 samples, 0.02%)</title><rect x="1189.8" y="293" width="0.1" height="15.0" fill="rgb(235,215,45)" rx="2" ry="2" />
<text  x="1192.75" y="303.5" ></text>
</g>
<g >
<title>get_freepointer.isra.0 (104 samples, 0.02%)</title><rect x="891.2" y="165" width="0.2" height="15.0" fill="rgb(246,52,49)" rx="2" ry="2" />
<text  x="894.18" y="175.5" ></text>
</g>
<g >
<title>do_idle (1,050 samples, 0.20%)</title><rect x="1187.6" y="325" width="2.4" height="15.0" fill="rgb(243,156,33)" rx="2" ry="2" />
<text  x="1190.59" y="335.5" ></text>
</g>
<g >
<title>finish_task_switch.isra.0 (27,125 samples, 5.16%)</title><rect x="418.4" y="181" width="60.9" height="15.0" fill="rgb(208,224,38)" rx="2" ry="2" />
<text  x="421.44" y="191.5" >finish..</text>
</g>
<g >
<title>freelist_dereference.isra.0 (2,343 samples, 0.45%)</title><rect x="375.0" y="133" width="5.3" height="15.0" fill="rgb(254,226,24)" rx="2" ry="2" />
<text  x="378.00" y="143.5" ></text>
</g>
<g >
<title>aa_file_perm (597 samples, 0.11%)</title><rect x="571.4" y="261" width="1.3" height="15.0" fill="rgb(216,153,25)" rx="2" ry="2" />
<text  x="574.35" y="271.5" ></text>
</g>
<g >
<title>arch_local_irq_disable (81 samples, 0.02%)</title><rect x="261.2" y="133" width="0.2" height="15.0" fill="rgb(208,90,29)" rx="2" ry="2" />
<text  x="264.19" y="143.5" ></text>
</g>
<g >
<title>obj_full_size.isra.0 (55 samples, 0.01%)</title><rect x="911.7" y="133" width="0.1" height="15.0" fill="rgb(221,175,41)" rx="2" ry="2" />
<text  x="914.65" y="143.5" ></text>
</g>
<g >
<title>should_failslab (243 samples, 0.05%)</title><rect x="895.9" y="165" width="0.6" height="15.0" fill="rgb(241,203,49)" rx="2" ry="2" />
<text  x="898.93" y="175.5" ></text>
</g>
<g >
<title>rcu_read_unlock_strict (161 samples, 0.03%)</title><rect x="395.6" y="165" width="0.4" height="15.0" fill="rgb(245,183,39)" rx="2" ry="2" />
<text  x="398.59" y="175.5" ></text>
</g>
<g >
<title>freelist_ptr.isra.0 (239 samples, 0.05%)</title><rect x="282.0" y="149" width="0.5" height="15.0" fill="rgb(215,99,14)" rx="2" ry="2" />
<text  x="285.01" y="159.5" ></text>
</g>
<g >
<title>cpuidle_enter_state (942 samples, 0.18%)</title><rect x="1187.6" y="293" width="2.1" height="15.0" fill="rgb(219,200,40)" rx="2" ry="2" />
<text  x="1190.63" y="303.5" ></text>
</g>
<g >
<title>schedule_idle (81 samples, 0.02%)</title><rect x="1189.8" y="309" width="0.1" height="15.0" fill="rgb(252,216,53)" rx="2" ry="2" />
<text  x="1192.75" y="319.5" ></text>
</g>
<g >
<title>put_cpu_partial (1,095 samples, 0.21%)</title><rect x="273.1" y="149" width="2.5" height="15.0" fill="rgb(227,100,39)" rx="2" ry="2" />
<text  x="276.11" y="159.5" ></text>
</g>
<g >
<title>cmpxchg_double_slab.constprop.0.isra.0 (5,017 samples, 0.95%)</title><rect x="231.3" y="149" width="11.3" height="15.0" fill="rgb(228,98,13)" rx="2" ry="2" />
<text  x="234.33" y="159.5" ></text>
</g>
<g >
<title>kmem_cache_debug (118 samples, 0.02%)</title><rect x="370.9" y="149" width="0.3" height="15.0" fill="rgb(241,143,10)" rx="2" ry="2" />
<text  x="373.93" y="159.5" ></text>
</g>
<g >
<title>page_counter_try_charge (212 samples, 0.04%)</title><rect x="932.7" y="85" width="0.4" height="15.0" fill="rgb(208,124,37)" rx="2" ry="2" />
<text  x="935.66" y="95.5" ></text>
</g>
<g >
<title>freelist_ptr.isra.0 (147 samples, 0.03%)</title><rect x="381.6" y="117" width="0.3" height="15.0" fill="rgb(239,4,0)" rx="2" ry="2" />
<text  x="384.62" y="127.5" ></text>
</g>
<g >
<title>generic_perform_write (89 samples, 0.02%)</title><rect x="1173.3" y="293" width="0.2" height="15.0" fill="rgb(233,149,48)" rx="2" ry="2" />
<text  x="1176.34" y="303.5" ></text>
</g>
<g >
<title>rcu_read_unlock_strict (162 samples, 0.03%)</title><rect x="1004.0" y="133" width="0.3" height="15.0" fill="rgb(218,20,7)" rx="2" ry="2" />
<text  x="1006.98" y="143.5" ></text>
</g>
<g >
<title>irqentry_exit (171 samples, 0.03%)</title><rect x="690.9" y="357" width="0.4" height="15.0" fill="rgb(207,120,24)" rx="2" ry="2" />
<text  x="693.94" y="367.5" ></text>
</g>
<g >
<title>__cond_resched (149 samples, 0.03%)</title><rect x="752.5" y="229" width="0.3" height="15.0" fill="rgb(210,8,29)" rx="2" ry="2" />
<text  x="755.47" y="239.5" ></text>
</g>
<g >
<title>consume_skb (85,914 samples, 16.34%)</title><rect x="212.6" y="229" width="192.8" height="15.0" fill="rgb(228,212,5)" rx="2" ry="2" />
<text  x="215.55" y="239.5" >consume_skb</text>
</g>
<g >
<title>slab_want_init_on_alloc (177 samples, 0.03%)</title><rect x="936.0" y="181" width="0.4" height="15.0" fill="rgb(238,224,43)" rx="2" ry="2" />
<text  x="939.03" y="191.5" ></text>
</g>
<g >
<title>[libsqlite3.so.0.8.6] (481 samples, 0.09%)</title><rect x="1166.3" y="437" width="1.1" height="15.0" fill="rgb(213,45,12)" rx="2" ry="2" />
<text  x="1169.31" y="447.5" ></text>
</g>
<g >
<title>exit_to_user_mode_prepare (49 samples, 0.01%)</title><rect x="1168.9" y="341" width="0.1" height="15.0" fill="rgb(241,90,22)" rx="2" ry="2" />
<text  x="1171.87" y="351.5" ></text>
</g>
<g >
<title>__libc_start_main (45 samples, 0.01%)</title><rect x="1166.0" y="421" width="0.1" height="15.0" fill="rgb(232,176,44)" rx="2" ry="2" />
<text  x="1168.96" y="431.5" ></text>
</g>
<g >
<title>rw_verify_area (4,871 samples, 0.93%)</title><rect x="563.8" y="309" width="11.0" height="15.0" fill="rgb(229,163,22)" rx="2" ry="2" />
<text  x="566.82" y="319.5" ></text>
</g>
<g >
<title>security_socket_recvmsg (2,940 samples, 0.56%)</title><rect x="163.9" y="261" width="6.6" height="15.0" fill="rgb(216,99,36)" rx="2" ry="2" />
<text  x="166.87" y="271.5" ></text>
</g>
<g >
<title>do_syscall_64 (213,510 samples, 40.61%)</title><rect x="121.7" y="373" width="479.2" height="15.0" fill="rgb(218,204,16)" rx="2" ry="2" />
<text  x="124.69" y="383.5" >do_syscall_64</text>
</g>
<g >
<title>memcg_slab_pre_alloc_hook (179 samples, 0.03%)</title><rect x="967.0" y="165" width="0.5" height="15.0" fill="rgb(253,183,13)" rx="2" ry="2" />
<text  x="970.05" y="175.5" ></text>
</g>
<g >
<title>scm_recv.constprop.0 (650 samples, 0.12%)</title><rect x="479.3" y="229" width="1.5" height="15.0" fill="rgb(252,10,36)" rx="2" ry="2" />
<text  x="482.33" y="239.5" ></text>
</g>
<g >
<title>__alloc_skb (149 samples, 0.03%)</title><rect x="843.5" y="229" width="0.3" height="15.0" fill="rgb(238,62,45)" rx="2" ry="2" />
<text  x="846.48" y="239.5" ></text>
</g>
<g >
<title>sock_write_iter (181,268 samples, 34.48%)</title><rect x="724.5" y="293" width="406.9" height="15.0" fill="rgb(221,200,16)" rx="2" ry="2" />
<text  x="727.50" y="303.5" >sock_write_iter</text>
</g>
<g >
<title>_raw_spin_lock (3,692 samples, 0.70%)</title><rect x="173.2" y="245" width="8.3" height="15.0" fill="rgb(234,87,13)" rx="2" ry="2" />
<text  x="176.16" y="255.5" ></text>
</g>
<g >
<title>sock_wfree (6,957 samples, 1.32%)</title><rect x="387.0" y="181" width="15.6" height="15.0" fill="rgb(218,45,40)" rx="2" ry="2" />
<text  x="389.96" y="191.5" ></text>
</g>
<g >
<title>new_slab (159 samples, 0.03%)</title><rect x="890.3" y="149" width="0.3" height="15.0" fill="rgb(227,111,37)" rx="2" ry="2" />
<text  x="893.25" y="159.5" ></text>
</g>
<g >
<title>slab_pre_alloc_hook.constprop.0 (8,403 samples, 1.60%)</title><rect x="986.2" y="165" width="18.8" height="15.0" fill="rgb(207,208,52)" rx="2" ry="2" />
<text  x="989.18" y="175.5" ></text>
</g>
<g >
<title>irqentry_exit_to_user_mode (55 samples, 0.01%)</title><rect x="1167.3" y="373" width="0.1" height="15.0" fill="rgb(222,25,45)" rx="2" ry="2" />
<text  x="1170.27" y="383.5" ></text>
</g>
<g >
<title>obj_cgroup_charge_pages (4,044 samples, 0.77%)</title><rect x="924.1" y="117" width="9.1" height="15.0" fill="rgb(221,37,45)" rx="2" ry="2" />
<text  x="927.12" y="127.5" ></text>
</g>
<g >
<title>exit_to_user_mode_prepare (2,746 samples, 0.52%)</title><rect x="1158.8" y="341" width="6.2" height="15.0" fill="rgb(251,208,32)" rx="2" ry="2" />
<text  x="1161.82" y="351.5" ></text>
</g>
<g >
<title>get_freepointer.isra.0 (121 samples, 0.02%)</title><rect x="370.7" y="149" width="0.2" height="15.0" fill="rgb(223,6,42)" rx="2" ry="2" />
<text  x="373.66" y="159.5" ></text>
</g>
<g >
<title>get_node (110 samples, 0.02%)</title><rect x="893.7" y="165" width="0.3" height="15.0" fill="rgb(242,156,9)" rx="2" ry="2" />
<text  x="896.71" y="175.5" ></text>
</g>
<g >
<title>security_socket_sendmsg (111 samples, 0.02%)</title><rect x="732.0" y="277" width="0.3" height="15.0" fill="rgb(233,172,21)" rx="2" ry="2" />
<text  x="735.01" y="287.5" ></text>
</g>
<g >
<title>get_obj_cgroup_from_current (3,227 samples, 0.61%)</title><rect x="989.7" y="133" width="7.3" height="15.0" fill="rgb(250,88,12)" rx="2" ry="2" />
<text  x="992.74" y="143.5" ></text>
</g>
<g >
<title>__check_heap_object (51 samples, 0.01%)</title><rect x="508.9" y="165" width="0.1" height="15.0" fill="rgb(209,163,39)" rx="2" ry="2" />
<text  x="511.87" y="175.5" ></text>
</g>
<g >
<title>unix_stream_read_actor (26,118 samples, 4.97%)</title><rect x="503.7" y="229" width="58.7" height="15.0" fill="rgb(237,48,18)" rx="2" ry="2" />
<text  x="506.74" y="239.5" >unix_s..</text>
</g>
<g >
<title>__cond_resched (226 samples, 0.04%)</title><rect x="205.2" y="229" width="0.5" height="15.0" fill="rgb(210,155,17)" rx="2" ry="2" />
<text  x="208.22" y="239.5" ></text>
</g>
<g >
<title>new_sync_write (95 samples, 0.02%)</title><rect x="707.7" y="325" width="0.2" height="15.0" fill="rgb(205,8,37)" rx="2" ry="2" />
<text  x="710.73" y="335.5" ></text>
</g>
<g >
<title>__raw_callee_save___pv_queued_spin_unlock (2,863 samples, 0.54%)</title><rect x="205.7" y="229" width="6.5" height="15.0" fill="rgb(251,112,29)" rx="2" ry="2" />
<text  x="208.73" y="239.5" ></text>
</g>
<g >
<title>pool-tracker-st (4,373 samples, 0.83%)</title><rect x="1166.1" y="453" width="9.8" height="15.0" fill="rgb(241,122,44)" rx="2" ry="2" />
<text  x="1169.06" y="463.5" ></text>
</g>
<g >
<title>asm_sysvec_reschedule_ipi (441 samples, 0.08%)</title><rect x="118.8" y="389" width="1.0" height="15.0" fill="rgb(207,228,5)" rx="2" ry="2" />
<text  x="121.80" y="399.5" ></text>
</g>
<g >
<title>[tracker-store] (54 samples, 0.01%)</title><rect x="1169.8" y="405" width="0.2" height="15.0" fill="rgb(218,104,25)" rx="2" ry="2" />
<text  x="1172.83" y="415.5" ></text>
</g>
<g >
<title>cache_vmstat_idx.isra.0 (116 samples, 0.02%)</title><rect x="971.5" y="149" width="0.3" height="15.0" fill="rgb(241,221,20)" rx="2" ry="2" />
<text  x="974.54" y="159.5" ></text>
</g>
<g >
<title>unix_stream_recvmsg (499 samples, 0.09%)</title><rect x="562.4" y="277" width="1.1" height="15.0" fill="rgb(207,135,24)" rx="2" ry="2" />
<text  x="565.37" y="287.5" ></text>
</g>
<g >
<title>__libc_write (251,030 samples, 47.75%)</title><rect x="602.3" y="405" width="563.5" height="15.0" fill="rgb(249,225,29)" rx="2" ry="2" />
<text  x="605.34" y="415.5" >__libc_write</text>
</g>
<g >
<title>sock_def_readable (138 samples, 0.03%)</title><rect x="758.1" y="261" width="0.4" height="15.0" fill="rgb(234,169,37)" rx="2" ry="2" />
<text  x="761.15" y="271.5" ></text>
</g>
<g >
<title>rw_verify_area (4,144 samples, 0.79%)</title><rect x="1131.4" y="309" width="9.3" height="15.0" fill="rgb(219,21,3)" rx="2" ry="2" />
<text  x="1134.35" y="319.5" ></text>
</g>
<g >
<title>ksys_read (183 samples, 0.03%)</title><rect x="579.3" y="357" width="0.4" height="15.0" fill="rgb(229,33,6)" rx="2" ry="2" />
<text  x="582.32" y="367.5" ></text>
</g>
<g >
<title>irqentry_exit (55 samples, 0.01%)</title><rect x="1167.3" y="389" width="0.1" height="15.0" fill="rgb(245,55,10)" rx="2" ry="2" />
<text  x="1170.27" y="399.5" ></text>
</g>
<g >
<title>arch_local_irq_enable (80 samples, 0.02%)</title><rect x="1189.8" y="261" width="0.1" height="15.0" fill="rgb(228,158,17)" rx="2" ry="2" />
<text  x="1192.76" y="271.5" ></text>
</g>
<g >
<title>[unknown] (106 samples, 0.02%)</title><rect x="1170.1" y="389" width="0.3" height="15.0" fill="rgb(243,130,42)" rx="2" ry="2" />
<text  x="1173.13" y="399.5" ></text>
</g>
<g >
<title>cache_vmstat_idx.isra.0 (135 samples, 0.03%)</title><rect x="318.9" y="133" width="0.3" height="15.0" fill="rgb(247,229,12)" rx="2" ry="2" />
<text  x="321.89" y="143.5" ></text>
</g>
<g >
<title>rcu_read_unlock_strict (50 samples, 0.01%)</title><rect x="933.2" y="117" width="0.2" height="15.0" fill="rgb(227,124,10)" rx="2" ry="2" />
<text  x="936.25" y="127.5" ></text>
</g>
<g >
<title>rcu_all_qs (112 samples, 0.02%)</title><rect x="1004.8" y="149" width="0.2" height="15.0" fill="rgb(227,64,15)" rx="2" ry="2" />
<text  x="1007.75" y="159.5" ></text>
</g>
<g >
<title>__check_heap_object (144 samples, 0.03%)</title><rect x="787.9" y="229" width="0.4" height="15.0" fill="rgb(226,78,26)" rx="2" ry="2" />
<text  x="790.94" y="239.5" ></text>
</g>
<g >
<title>unix_destruct_scm (7,991 samples, 1.52%)</title><rect x="385.2" y="197" width="18.0" height="15.0" fill="rgb(215,137,8)" rx="2" ry="2" />
<text  x="388.25" y="207.5" ></text>
</g>
<g >
<title>get_freepointer_safe.isra.0 (845 samples, 0.16%)</title><rect x="963.8" y="165" width="1.9" height="15.0" fill="rgb(232,41,6)" rx="2" ry="2" />
<text  x="966.79" y="175.5" ></text>
</g>
<g >
<title>new_sync_write (99 samples, 0.02%)</title><rect x="1173.3" y="341" width="0.2" height="15.0" fill="rgb(227,157,2)" rx="2" ry="2" />
<text  x="1176.32" y="351.5" ></text>
</g>
<g >
<title>[unknown] (402 samples, 0.08%)</title><rect x="1172.3" y="405" width="1.0" height="15.0" fill="rgb(205,125,48)" rx="2" ry="2" />
<text  x="1175.35" y="415.5" ></text>
</g>
<g >
<title>skb_queue_tail (92 samples, 0.02%)</title><rect x="757.8" y="261" width="0.2" height="15.0" fill="rgb(233,96,35)" rx="2" ry="2" />
<text  x="760.82" y="271.5" ></text>
</g>
<g >
<title>mutex_lock (130 samples, 0.02%)</title><rect x="181.9" y="245" width="0.3" height="15.0" fill="rgb(210,28,23)" rx="2" ry="2" />
<text  x="184.93" y="255.5" ></text>
</g>
<g >
<title>skb_put (296 samples, 0.06%)</title><rect x="757.2" y="261" width="0.6" height="15.0" fill="rgb(212,101,44)" rx="2" ry="2" />
<text  x="760.16" y="271.5" ></text>
</g>
<g >
<title>__x86_indirect_thunk_rax (53 samples, 0.01%)</title><rect x="173.0" y="245" width="0.2" height="15.0" fill="rgb(212,162,26)" rx="2" ry="2" />
<text  x="176.04" y="255.5" ></text>
</g>
<g >
<title>_raw_spin_lock_irqsave (51 samples, 0.01%)</title><rect x="405.4" y="213" width="0.1" height="15.0" fill="rgb(217,137,20)" rx="2" ry="2" />
<text  x="408.42" y="223.5" ></text>
</g>
<g >
<title>slab_free_freelist_hook (53 samples, 0.01%)</title><rect x="284.3" y="181" width="0.2" height="15.0" fill="rgb(240,209,0)" rx="2" ry="2" />
<text  x="287.34" y="191.5" ></text>
</g>
<g >
<title>__x64_sys_write (199,280 samples, 37.91%)</title><rect x="696.5" y="357" width="447.3" height="15.0" fill="rgb(216,121,2)" rx="2" ry="2" />
<text  x="699.48" y="367.5" >__x64_sys_write</text>
</g>
<g >
<title>rcu_read_unlock_strict (63 samples, 0.01%)</title><rect x="985.4" y="133" width="0.1" height="15.0" fill="rgb(217,185,7)" rx="2" ry="2" />
<text  x="988.35" y="143.5" ></text>
</g>
<g >
<title>sock_alloc_send_pskb (84,376 samples, 16.05%)</title><rect x="840.5" y="245" width="189.4" height="15.0" fill="rgb(214,48,20)" rx="2" ry="2" />
<text  x="843.53" y="255.5" >sock_alloc_send_pskb</text>
</g>
<g >
<title>obj_full_size.isra.0 (189 samples, 0.04%)</title><rect x="272.7" y="149" width="0.4" height="15.0" fill="rgb(217,128,38)" rx="2" ry="2" />
<text  x="275.68" y="159.5" ></text>
</g>
<g >
<title>ext4_buffered_write_iter (97 samples, 0.02%)</title><rect x="1173.3" y="309" width="0.2" height="15.0" fill="rgb(245,148,30)" rx="2" ry="2" />
<text  x="1176.32" y="319.5" ></text>
</g>
<g >
<title>get_node (148 samples, 0.03%)</title><rect x="965.7" y="165" width="0.3" height="15.0" fill="rgb(206,166,15)" rx="2" ry="2" />
<text  x="968.69" y="175.5" ></text>
</g>
<g >
<title>skb_copy_datagram_from_iter (15,171 samples, 2.89%)</title><rect x="786.0" y="245" width="34.0" height="15.0" fill="rgb(225,43,16)" rx="2" ry="2" />
<text  x="788.97" y="255.5" >sk..</text>
</g>
<g >
<title>kmem_cache_debug_flags (50 samples, 0.01%)</title><rect x="802.7" y="213" width="0.1" height="15.0" fill="rgb(227,165,23)" rx="2" ry="2" />
<text  x="805.71" y="223.5" ></text>
</g>
<g >
<title>__cond_resched (194 samples, 0.04%)</title><rect x="774.6" y="245" width="0.4" height="15.0" fill="rgb(218,85,28)" rx="2" ry="2" />
<text  x="777.61" y="255.5" ></text>
</g>
<g >
<title>set_freepointer (245 samples, 0.05%)</title><rect x="277.2" y="165" width="0.5" height="15.0" fill="rgb(219,80,16)" rx="2" ry="2" />
<text  x="280.18" y="175.5" ></text>
</g>
<g >
<title>freelist_ptr.isra.0 (132 samples, 0.03%)</title><rect x="893.4" y="133" width="0.3" height="15.0" fill="rgb(240,142,21)" rx="2" ry="2" />
<text  x="896.41" y="143.5" ></text>
</g>
<g >
<title>__kmalloc_node_track_caller (31,855 samples, 6.06%)</title><rect x="864.9" y="197" width="71.5" height="15.0" fill="rgb(245,51,8)" rx="2" ry="2" />
<text  x="867.93" y="207.5" >__kmallo..</text>
</g>
<g >
<title>refill_obj_stock (103 samples, 0.02%)</title><rect x="272.2" y="133" width="0.2" height="15.0" fill="rgb(254,56,17)" rx="2" ry="2" />
<text  x="275.20" y="143.5" ></text>
</g>
<g >
<title>propagate_protected_usage (168 samples, 0.03%)</title><rect x="931.5" y="85" width="0.4" height="15.0" fill="rgb(207,7,17)" rx="2" ry="2" />
<text  x="934.51" y="95.5" ></text>
</g>
<g >
<title>slab_free (57 samples, 0.01%)</title><rect x="296.3" y="197" width="0.2" height="15.0" fill="rgb(250,32,20)" rx="2" ry="2" />
<text  x="299.32" y="207.5" ></text>
</g>
<g >
<title>g_hash_table_lookup (75 samples, 0.01%)</title><rect x="1175.3" y="437" width="0.2" height="15.0" fill="rgb(210,165,41)" rx="2" ry="2" />
<text  x="1178.31" y="447.5" ></text>
</g>
<g >
<title>slab_pre_alloc_hook.constprop.0 (10,006 samples, 1.90%)</title><rect x="912.6" y="165" width="22.4" height="15.0" fill="rgb(219,109,40)" rx="2" ry="2" />
<text  x="915.56" y="175.5" >s..</text>
</g>
<g >
<title>schedule (2,932 samples, 0.56%)</title><rect x="594.3" y="325" width="6.6" height="15.0" fill="rgb(217,12,1)" rx="2" ry="2" />
<text  x="597.29" y="335.5" ></text>
</g>
<g >
<title>[unknown] (50 samples, 0.01%)</title><rect x="1170.2" y="373" width="0.2" height="15.0" fill="rgb(243,112,6)" rx="2" ry="2" />
<text  x="1173.24" y="383.5" ></text>
</g>
<g >
<title>freelist_dereference.isra.0 (655 samples, 0.12%)</title><rect x="891.5" y="149" width="1.5" height="15.0" fill="rgb(243,75,46)" rx="2" ry="2" />
<text  x="894.50" y="159.5" ></text>
</g>
<g >
<title>node_match (85 samples, 0.02%)</title><rect x="941.8" y="181" width="0.1" height="15.0" fill="rgb(213,140,9)" rx="2" ry="2" />
<text  x="944.75" y="191.5" ></text>
</g>
<g >
<title>__virt_addr_valid (1,980 samples, 0.38%)</title><rect x="798.3" y="213" width="4.4" height="15.0" fill="rgb(208,224,30)" rx="2" ry="2" />
<text  x="801.27" y="223.5" ></text>
</g>
<g >
<title>__check_object_size (6,489 samples, 1.23%)</title><rect x="788.3" y="229" width="14.5" height="15.0" fill="rgb(211,213,38)" rx="2" ry="2" />
<text  x="791.26" y="239.5" ></text>
</g>
<g >
<title>syscall_exit_to_user_mode (3,047 samples, 0.58%)</title><rect x="1158.2" y="357" width="6.8" height="15.0" fill="rgb(234,106,23)" rx="2" ry="2" />
<text  x="1161.18" y="367.5" ></text>
</g>
<g >
<title>put_pid (93 samples, 0.02%)</title><rect x="383.9" y="197" width="0.2" height="15.0" fill="rgb(253,108,28)" rx="2" ry="2" />
<text  x="386.93" y="207.5" ></text>
</g>
<g >
<title>aa_file_perm (902 samples, 0.17%)</title><rect x="1138.5" y="261" width="2.0" height="15.0" fill="rgb(226,138,53)" rx="2" ry="2" />
<text  x="1141.52" y="271.5" ></text>
</g>
<g >
<title>rcu_all_qs (245 samples, 0.05%)</title><rect x="756.4" y="213" width="0.6" height="15.0" fill="rgb(234,214,26)" rx="2" ry="2" />
<text  x="759.42" y="223.5" ></text>
</g>
<g >
<title>virt_to_cache (5,285 samples, 1.01%)</title><rect x="284.5" y="181" width="11.8" height="15.0" fill="rgb(229,163,26)" rx="2" ry="2" />
<text  x="287.46" y="191.5" ></text>
</g>
<g >
<title>obj_cgroup_uncharge (47 samples, 0.01%)</title><rect x="272.6" y="149" width="0.1" height="15.0" fill="rgb(254,182,49)" rx="2" ry="2" />
<text  x="275.58" y="159.5" ></text>
</g>
<g >
<title>_raw_spin_lock (48 samples, 0.01%)</title><rect x="212.2" y="229" width="0.1" height="15.0" fill="rgb(228,203,9)" rx="2" ry="2" />
<text  x="215.16" y="239.5" ></text>
</g>
<g >
<title>freelist_dereference.isra.0 (140 samples, 0.03%)</title><rect x="893.1" y="133" width="0.3" height="15.0" fill="rgb(250,70,20)" rx="2" ry="2" />
<text  x="896.10" y="143.5" ></text>
</g>
<g >
<title>swapper (6,259 samples, 1.19%)</title><rect x="1175.9" y="453" width="14.1" height="15.0" fill="rgb(213,67,27)" rx="2" ry="2" />
<text  x="1178.91" y="463.5" ></text>
</g>
<g >
<title>_raw_spin_unlock_irqrestore (352 samples, 0.07%)</title><rect x="405.5" y="213" width="0.8" height="15.0" fill="rgb(219,29,24)" rx="2" ry="2" />
<text  x="408.54" y="223.5" ></text>
</g>
<g >
<title>ksize (1,442 samples, 0.27%)</title><rect x="1006.8" y="197" width="3.2" height="15.0" fill="rgb(233,228,41)" rx="2" ry="2" />
<text  x="1009.79" y="207.5" ></text>
</g>
<g >
<title>page_counter_try_charge (3,144 samples, 0.60%)</title><rect x="924.8" y="101" width="7.1" height="15.0" fill="rgb(250,37,32)" rx="2" ry="2" />
<text  x="927.83" y="111.5" ></text>
</g>
<g >
<title>apparmor_socket_sendmsg (2,043 samples, 0.39%)</title><rect x="752.4" y="245" width="4.6" height="15.0" fill="rgb(253,61,52)" rx="2" ry="2" />
<text  x="755.38" y="255.5" ></text>
</g>
<g >
<title>slab_free (29,391 samples, 5.59%)</title><rect x="218.4" y="181" width="65.9" height="15.0" fill="rgb(248,121,49)" rx="2" ry="2" />
<text  x="221.37" y="191.5" >slab_free</text>
</g>
<g >
<title>__cond_resched (237 samples, 0.05%)</title><rect x="890.6" y="165" width="0.6" height="15.0" fill="rgb(231,164,11)" rx="2" ry="2" />
<text  x="893.65" y="175.5" ></text>
</g>
<g >
<title>unix_stream_read_actor (148 samples, 0.03%)</title><rect x="185.7" y="245" width="0.4" height="15.0" fill="rgb(227,127,43)" rx="2" ry="2" />
<text  x="188.72" y="255.5" ></text>
</g>
<g >
<title>mod_objcg_state (1,848 samples, 0.35%)</title><rect x="907.5" y="133" width="4.2" height="15.0" fill="rgb(232,166,46)" rx="2" ry="2" />
<text  x="910.50" y="143.5" ></text>
</g>
<g >
<title>kmem_cache_has_cpu_partial (83 samples, 0.02%)</title><rect x="244.1" y="149" width="0.2" height="15.0" fill="rgb(232,88,21)" rx="2" ry="2" />
<text  x="247.14" y="159.5" ></text>
</g>
<g >
<title>sysvec_reschedule_ipi (49 samples, 0.01%)</title><rect x="1168.9" y="389" width="0.1" height="15.0" fill="rgb(247,150,18)" rx="2" ry="2" />
<text  x="1171.87" y="399.5" ></text>
</g>
<g >
<title>slab_free (33,755 samples, 6.42%)</title><rect x="307.1" y="165" width="75.8" height="15.0" fill="rgb(253,148,25)" rx="2" ry="2" />
<text  x="310.13" y="175.5" >slab_free</text>
</g>
<g >
<title>aa_sk_perm (1,855 samples, 0.35%)</title><rect x="752.8" y="229" width="4.2" height="15.0" fill="rgb(237,130,1)" rx="2" ry="2" />
<text  x="755.80" y="239.5" ></text>
</g>
<g >
<title>rcu_read_unlock_strict (162 samples, 0.03%)</title><rect x="933.8" y="133" width="0.4" height="15.0" fill="rgb(243,161,8)" rx="2" ry="2" />
<text  x="936.79" y="143.5" ></text>
</g>
<g >
<title>arch_local_irq_disable (92 samples, 0.02%)</title><rect x="349.4" y="117" width="0.2" height="15.0" fill="rgb(209,123,9)" rx="2" ry="2" />
<text  x="352.42" y="127.5" ></text>
</g>
<g >
<title>__slub_debug_enabled (51 samples, 0.01%)</title><rect x="798.2" y="181" width="0.1" height="15.0" fill="rgb(230,98,51)" rx="2" ry="2" />
<text  x="801.15" y="191.5" ></text>
</g>
<g >
<title>mod_objcg_state (74 samples, 0.01%)</title><rect x="985.5" y="149" width="0.2" height="15.0" fill="rgb(251,121,21)" rx="2" ry="2" />
<text  x="988.49" y="159.5" ></text>
</g>
<g >
<title>security_file_permission (949 samples, 0.18%)</title><rect x="574.8" y="309" width="2.1" height="15.0" fill="rgb(249,53,49)" rx="2" ry="2" />
<text  x="577.75" y="319.5" ></text>
</g>
<g >
<title>__cond_resched (168 samples, 0.03%)</title><rect x="987.4" y="149" width="0.4" height="15.0" fill="rgb(218,60,7)" rx="2" ry="2" />
<text  x="990.38" y="159.5" ></text>
</g>
<g >
<title>maybe_wipe_obj_freeptr (109 samples, 0.02%)</title><rect x="941.3" y="181" width="0.3" height="15.0" fill="rgb(246,16,25)" rx="2" ry="2" />
<text  x="944.33" y="191.5" ></text>
</g>
<g >
<title>mod_objcg_state (1,893 samples, 0.36%)</title><rect x="261.4" y="133" width="4.3" height="15.0" fill="rgb(233,68,18)" rx="2" ry="2" />
<text  x="264.44" y="143.5" ></text>
</g>
<g >
<title>slab_ksize (62 samples, 0.01%)</title><rect x="864.8" y="165" width="0.1" height="15.0" fill="rgb(212,192,3)" rx="2" ry="2" />
<text  x="867.79" y="175.5" ></text>
</g>
<g >
<title>apparmor_socket_sendmsg (649 samples, 0.12%)</title><rect x="748.3" y="261" width="1.4" height="15.0" fill="rgb(241,229,5)" rx="2" ry="2" />
<text  x="751.29" y="271.5" ></text>
</g>
<g >
<title>obj_cgroup_charge_pages (71 samples, 0.01%)</title><rect x="933.6" y="133" width="0.2" height="15.0" fill="rgb(249,221,0)" rx="2" ry="2" />
<text  x="936.63" y="143.5" ></text>
</g>
<g >
<title>freelist_ptr.isra.0 (46 samples, 0.01%)</title><rect x="282.7" y="117" width="0.1" height="15.0" fill="rgb(229,95,50)" rx="2" ry="2" />
<text  x="285.67" y="127.5" ></text>
</g>
<g >
<title>unix_stream_read_generic (167,660 samples, 31.89%)</title><rect x="186.1" y="245" width="376.3" height="15.0" fill="rgb(248,20,44)" rx="2" ry="2" />
<text  x="189.05" y="255.5" >unix_stream_read_generic</text>
</g>
<g >
<title>maybe_wipe_obj_freeptr (280 samples, 0.05%)</title><rect x="966.0" y="165" width="0.7" height="15.0" fill="rgb(212,11,43)" rx="2" ry="2" />
<text  x="969.05" y="175.5" ></text>
</g>
<g >
<title>new_sync_read (95 samples, 0.02%)</title><rect x="138.4" y="325" width="0.2" height="15.0" fill="rgb(219,130,1)" rx="2" ry="2" />
<text  x="141.37" y="335.5" ></text>
</g>
<g >
<title>slab_post_alloc_hook (7,481 samples, 1.42%)</title><rect x="969.4" y="165" width="16.8" height="15.0" fill="rgb(223,58,22)" rx="2" ry="2" />
<text  x="972.39" y="175.5" ></text>
</g>
<g >
<title>__check_heap_object (2,618 samples, 0.50%)</title><rect x="792.4" y="213" width="5.9" height="15.0" fill="rgb(243,37,45)" rx="2" ry="2" />
<text  x="795.39" y="223.5" ></text>
</g>
<g >
<title>vfs_write (58 samples, 0.01%)</title><rect x="1143.6" y="341" width="0.2" height="15.0" fill="rgb(207,203,48)" rx="2" ry="2" />
<text  x="1146.63" y="351.5" ></text>
</g>
<g >
<title>try_charge_memcg (266 samples, 0.05%)</title><rect x="1003.1" y="101" width="0.6" height="15.0" fill="rgb(244,24,18)" rx="2" ry="2" />
<text  x="1006.12" y="111.5" ></text>
</g>
<g >
<title>freelist_ptr.isra.0 (124 samples, 0.02%)</title><rect x="965.4" y="133" width="0.3" height="15.0" fill="rgb(242,57,17)" rx="2" ry="2" />
<text  x="968.41" y="143.5" ></text>
</g>
<g >
<title>__wake_up_common_lock (41,892 samples, 7.97%)</title><rect x="1034.0" y="213" width="94.0" height="15.0" fill="rgb(223,114,40)" rx="2" ry="2" />
<text  x="1036.98" y="223.5" >__wake_up_c..</text>
</g>
<g >
<title>freelist_ptr.isra.0 (202 samples, 0.04%)</title><rect x="242.6" y="149" width="0.4" height="15.0" fill="rgb(249,182,52)" rx="2" ry="2" />
<text  x="245.59" y="159.5" ></text>
</g>
<g >
<title>kmem_cache_debug_flags (181 samples, 0.03%)</title><rect x="528.8" y="133" width="0.4" height="15.0" fill="rgb(248,185,11)" rx="2" ry="2" />
<text  x="531.78" y="143.5" ></text>
</g>
<g >
<title>[libsqlite3.so.0.8.6] (180 samples, 0.03%)</title><rect x="1169.4" y="405" width="0.4" height="15.0" fill="rgb(244,95,34)" rx="2" ry="2" />
<text  x="1172.43" y="415.5" ></text>
</g>
<g >
<title>rcu_read_unlock_strict (123 samples, 0.02%)</title><rect x="369.8" y="133" width="0.3" height="15.0" fill="rgb(240,96,9)" rx="2" ry="2" />
<text  x="372.79" y="143.5" ></text>
</g>
<g >
<title>skb_queue_tail (8,992 samples, 1.71%)</title><rect x="820.1" y="245" width="20.2" height="15.0" fill="rgb(208,196,1)" rx="2" ry="2" />
<text  x="823.14" y="255.5" ></text>
</g>
<g >
<title>unix_stream_sendmsg (165,539 samples, 31.49%)</title><rect x="758.5" y="261" width="371.5" height="15.0" fill="rgb(243,55,50)" rx="2" ry="2" />
<text  x="761.46" y="271.5" >unix_stream_sendmsg</text>
</g>
<g >
<title>memcg_slab_post_alloc_hook (6,102 samples, 1.16%)</title><rect x="971.8" y="149" width="13.7" height="15.0" fill="rgb(212,166,43)" rx="2" ry="2" />
<text  x="974.80" y="159.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64 (211,385 samples, 40.21%)</title><rect x="691.3" y="389" width="474.5" height="15.0" fill="rgb(220,109,49)" rx="2" ry="2" />
<text  x="694.33" y="399.5" >entry_SYSCALL_64</text>
</g>
<g >
<title>obj_full_size.isra.0 (69 samples, 0.01%)</title><rect x="985.7" y="149" width="0.1" height="15.0" fill="rgb(207,103,24)" rx="2" ry="2" />
<text  x="988.66" y="159.5" ></text>
</g>
<g >
<title>syscall_exit_to_user_mode (633 samples, 0.12%)</title><rect x="600.9" y="373" width="1.4" height="15.0" fill="rgb(239,124,39)" rx="2" ry="2" />
<text  x="603.92" y="383.5" ></text>
</g>
<g >
<title>UCNV_TO_U_CALLBACK_SUBSTITUTE_67 (206 samples, 0.04%)</title><rect x="1167.4" y="421" width="0.5" height="15.0" fill="rgb(240,81,31)" rx="2" ry="2" />
<text  x="1170.40" y="431.5" ></text>
</g>
<g >
<title>main (45 samples, 0.01%)</title><rect x="1166.0" y="405" width="0.1" height="15.0" fill="rgb(230,37,20)" rx="2" ry="2" />
<text  x="1168.96" y="415.5" ></text>
</g>
<g >
<title>arch_local_irq_enable (569 samples, 0.11%)</title><rect x="910.3" y="117" width="1.3" height="15.0" fill="rgb(238,97,52)" rx="2" ry="2" />
<text  x="913.28" y="127.5" ></text>
</g>
<g >
<title>finish_task_switch.isra.0 (80 samples, 0.02%)</title><rect x="1189.8" y="277" width="0.1" height="15.0" fill="rgb(240,90,5)" rx="2" ry="2" />
<text  x="1192.76" y="287.5" ></text>
</g>
<g >
<title>apparmor_socket_recvmsg (2,046 samples, 0.39%)</title><rect x="165.9" y="245" width="4.6" height="15.0" fill="rgb(229,224,44)" rx="2" ry="2" />
<text  x="168.88" y="255.5" ></text>
</g>
<g >
<title>cmpxchg_double_slab.constprop.0.isra.0 (88 samples, 0.02%)</title><rect x="219.4" y="165" width="0.2" height="15.0" fill="rgb(241,113,33)" rx="2" ry="2" />
<text  x="222.37" y="175.5" ></text>
</g>
<g >
<title>__raw_callee_save___pv_queued_spin_unlock (83 samples, 0.02%)</title><rect x="172.9" y="245" width="0.1" height="15.0" fill="rgb(252,226,34)" rx="2" ry="2" />
<text  x="175.86" y="255.5" ></text>
</g>
<g >
<title>cache_from_obj (178 samples, 0.03%)</title><rect x="217.8" y="181" width="0.4" height="15.0" fill="rgb(240,78,7)" rx="2" ry="2" />
<text  x="220.84" y="191.5" ></text>
</g>
<g >
<title>syscall_enter_from_user_mode (5,889 samples, 1.12%)</title><rect x="579.7" y="357" width="13.3" height="15.0" fill="rgb(245,188,34)" rx="2" ry="2" />
<text  x="582.73" y="367.5" ></text>
</g>
<g >
<title>_copy_to_iter (2,600 samples, 0.49%)</title><rect x="534.0" y="165" width="5.8" height="15.0" fill="rgb(229,90,8)" rx="2" ry="2" />
<text  x="536.99" y="175.5" ></text>
</g>
<g >
<title>__virt_addr_valid (96 samples, 0.02%)</title><rect x="802.8" y="229" width="0.2" height="15.0" fill="rgb(229,138,40)" rx="2" ry="2" />
<text  x="805.82" y="239.5" ></text>
</g>
<g >
<title>finish_wait (419 samples, 0.08%)</title><rect x="405.4" y="229" width="0.9" height="15.0" fill="rgb(252,223,54)" rx="2" ry="2" />
<text  x="408.39" y="239.5" ></text>
</g>
<g >
<title>consume_skb (208 samples, 0.04%)</title><rect x="181.5" y="245" width="0.4" height="15.0" fill="rgb(242,125,38)" rx="2" ry="2" />
<text  x="184.45" y="255.5" ></text>
</g>
<g >
<title>__wake_up_common_lock (1,504 samples, 0.29%)</title><rect x="399.1" y="133" width="3.4" height="15.0" fill="rgb(244,226,16)" rx="2" ry="2" />
<text  x="402.11" y="143.5" ></text>
</g>
<g >
<title>__libc_pwrite (122 samples, 0.02%)</title><rect x="1173.3" y="421" width="0.3" height="15.0" fill="rgb(208,3,51)" rx="2" ry="2" />
<text  x="1176.28" y="431.5" ></text>
</g>
<g >
<title>_raw_spin_unlock_irqrestore (2,509 samples, 0.48%)</title><rect x="956.9" y="133" width="5.6" height="15.0" fill="rgb(227,226,23)" rx="2" ry="2" />
<text  x="959.91" y="143.5" ></text>
</g>
<g >
<title>slab_want_init_on_free (131 samples, 0.02%)</title><rect x="1005.2" y="165" width="0.3" height="15.0" fill="rgb(221,148,14)" rx="2" ry="2" />
<text  x="1008.17" y="175.5" ></text>
</g>
<g >
<title>run_builtin (45 samples, 0.01%)</title><rect x="1166.0" y="389" width="0.1" height="15.0" fill="rgb(225,46,46)" rx="2" ry="2" />
<text  x="1168.96" y="399.5" ></text>
</g>
<g >
<title>security_socket_getpeersec_dgram (867 samples, 0.16%)</title><rect x="784.0" y="245" width="2.0" height="15.0" fill="rgb(246,147,42)" rx="2" ry="2" />
<text  x="787.03" y="255.5" ></text>
</g>
<g >
<title>_raw_spin_lock (577 samples, 0.11%)</title><rect x="779.0" y="245" width="1.3" height="15.0" fill="rgb(252,132,4)" rx="2" ry="2" />
<text  x="782.03" y="255.5" ></text>
</g>
<g >
<title>prepare_to_wait (1,771 samples, 0.34%)</title><rect x="411.0" y="229" width="4.0" height="15.0" fill="rgb(230,23,24)" rx="2" ry="2" />
<text  x="414.01" y="239.5" ></text>
</g>
<g >
<title>slab_want_init_on_free (50 samples, 0.01%)</title><rect x="966.6" y="149" width="0.1" height="15.0" fill="rgb(218,80,21)" rx="2" ry="2" />
<text  x="969.56" y="159.5" ></text>
</g>
<g >
<title>__wake_up_sync_key (1,504 samples, 0.29%)</title><rect x="399.1" y="149" width="3.4" height="15.0" fill="rgb(239,114,49)" rx="2" ry="2" />
<text  x="402.11" y="159.5" ></text>
</g>
<g >
<title>exit_to_user_mode_prepare (55 samples, 0.01%)</title><rect x="1167.3" y="357" width="0.1" height="15.0" fill="rgb(222,57,34)" rx="2" ry="2" />
<text  x="1170.27" y="367.5" ></text>
</g>
<g >
<title>_int_free (71 samples, 0.01%)</title><rect x="1173.9" y="421" width="0.2" height="15.0" fill="rgb(207,103,39)" rx="2" ry="2" />
<text  x="1176.91" y="431.5" ></text>
</g>
<g >
<title>unix_write_space (2,952 samples, 0.56%)</title><rect x="396.0" y="165" width="6.6" height="15.0" fill="rgb(226,185,37)" rx="2" ry="2" />
<text  x="398.95" y="175.5" ></text>
</g>
<g >
<title>kfree_skbmem (35,761 samples, 6.80%)</title><rect x="216.2" y="213" width="80.3" height="15.0" fill="rgb(223,195,46)" rx="2" ry="2" />
<text  x="219.19" y="223.5" >kfree_skb..</text>
</g>
<g >
<title>finish_task_switch.isra.0 (2,770 samples, 0.53%)</title><rect x="594.6" y="293" width="6.3" height="15.0" fill="rgb(252,70,21)" rx="2" ry="2" />
<text  x="597.65" y="303.5" ></text>
</g>
<g >
<title>new_sync_write (183,832 samples, 34.97%)</title><rect x="718.7" y="309" width="412.7" height="15.0" fill="rgb(210,19,9)" rx="2" ry="2" />
<text  x="721.74" y="319.5" >new_sync_write</text>
</g>
<g >
<title>__check_object_size (11,063 samples, 2.10%)</title><rect x="509.0" y="165" width="24.8" height="15.0" fill="rgb(209,193,41)" rx="2" ry="2" />
<text  x="511.98" y="175.5" >_..</text>
</g>
<g >
<title>rcu_read_unlock_strict (127 samples, 0.02%)</title><rect x="275.6" y="149" width="0.2" height="15.0" fill="rgb(240,21,29)" rx="2" ry="2" />
<text  x="278.56" y="159.5" ></text>
</g>
<g >
<title>_ZN6icu_6722RuleBasedBreakIterator10handleNextEv (58 samples, 0.01%)</title><rect x="1172.2" y="389" width="0.1" height="15.0" fill="rgb(229,95,53)" rx="2" ry="2" />
<text  x="1175.20" y="399.5" ></text>
</g>
<g >
<title>aa_file_perm (57 samples, 0.01%)</title><rect x="1134.6" y="277" width="0.1" height="15.0" fill="rgb(250,146,2)" rx="2" ry="2" />
<text  x="1137.57" y="287.5" ></text>
</g>
<g >
<title>kmem_cache_debug_flags (86 samples, 0.02%)</title><rect x="331.4" y="133" width="0.2" height="15.0" fill="rgb(209,140,12)" rx="2" ry="2" />
<text  x="334.41" y="143.5" ></text>
</g>
<g >
<title>__skb_datagram_iter (128 samples, 0.02%)</title><rect x="504.4" y="213" width="0.3" height="15.0" fill="rgb(206,194,50)" rx="2" ry="2" />
<text  x="507.42" y="223.5" ></text>
</g>
<g >
<title>u_charType_67 (52 samples, 0.01%)</title><rect x="1171.1" y="405" width="0.2" height="15.0" fill="rgb(231,174,35)" rx="2" ry="2" />
<text  x="1174.14" y="415.5" ></text>
</g>
<g >
<title>ksize (113 samples, 0.02%)</title><rect x="1012.7" y="213" width="0.2" height="15.0" fill="rgb(240,24,13)" rx="2" ry="2" />
<text  x="1015.68" y="223.5" ></text>
</g>
<g >
<title>kfree_skbmem (124 samples, 0.02%)</title><rect x="406.3" y="229" width="0.3" height="15.0" fill="rgb(224,37,20)" rx="2" ry="2" />
<text  x="409.33" y="239.5" ></text>
</g>
<g >
<title>kmalloc_slab (220 samples, 0.04%)</title><rect x="939.5" y="197" width="0.5" height="15.0" fill="rgb(244,137,22)" rx="2" ry="2" />
<text  x="942.53" y="207.5" ></text>
</g>
<g >
<title>unix_stream_read_generic (167 samples, 0.03%)</title><rect x="170.5" y="261" width="0.3" height="15.0" fill="rgb(217,6,8)" rx="2" ry="2" />
<text  x="173.47" y="271.5" ></text>
</g>
<g >
<title>slab_want_init_on_free (113 samples, 0.02%)</title><rect x="284.1" y="165" width="0.2" height="15.0" fill="rgb(231,21,29)" rx="2" ry="2" />
<text  x="287.09" y="175.5" ></text>
</g>
<g >
<title>get_freepointer_safe.isra.0 (1,022 samples, 0.19%)</title><rect x="891.4" y="165" width="2.3" height="15.0" fill="rgb(228,215,26)" rx="2" ry="2" />
<text  x="894.41" y="175.5" ></text>
</g>
<g >
<title>__schedule (27,386 samples, 5.21%)</title><rect x="417.9" y="197" width="61.4" height="15.0" fill="rgb(207,28,49)" rx="2" ry="2" />
<text  x="420.85" y="207.5" >__sche..</text>
</g>
<g >
<title>schedule (28,051 samples, 5.34%)</title><rect x="416.4" y="213" width="62.9" height="15.0" fill="rgb(243,145,22)" rx="2" ry="2" />
<text  x="419.37" y="223.5" >schedule</text>
</g>
<g >
<title>[unknown] (129 samples, 0.02%)</title><rect x="1172.1" y="405" width="0.2" height="15.0" fill="rgb(220,81,5)" rx="2" ry="2" />
<text  x="1175.06" y="415.5" ></text>
</g>
<g >
<title>_raw_spin_unlock_irqrestore (766 samples, 0.15%)</title><rect x="273.8" y="117" width="1.7" height="15.0" fill="rgb(222,106,9)" rx="2" ry="2" />
<text  x="276.83" y="127.5" ></text>
</g>
<g >
<title>[unknown] (514,827 samples, 97.93%)</title><rect x="10.3" y="437" width="1155.5" height="15.0" fill="rgb(222,70,46)" rx="2" ry="2" />
<text  x="13.26" y="447.5" >[unknown]</text>
</g>
<g >
<title>__slub_debug_enabled (83 samples, 0.02%)</title><rect x="330.7" y="117" width="0.2" height="15.0" fill="rgb(250,224,51)" rx="2" ry="2" />
<text  x="333.68" y="127.5" ></text>
</g>
<g >
<title>iov_iter_init (253 samples, 0.05%)</title><rect x="718.2" y="309" width="0.5" height="15.0" fill="rgb(236,196,12)" rx="2" ry="2" />
<text  x="721.17" y="319.5" ></text>
</g>
<g >
<title>cache_vmstat_idx.isra.0 (144 samples, 0.03%)</title><rect x="898.5" y="149" width="0.3" height="15.0" fill="rgb(243,208,47)" rx="2" ry="2" />
<text  x="901.45" y="159.5" ></text>
</g>
<g >
<title>_raw_spin_unlock_irqrestore (8,384 samples, 1.59%)</title><rect x="821.5" y="229" width="18.8" height="15.0" fill="rgb(222,108,39)" rx="2" ry="2" />
<text  x="824.50" y="239.5" ></text>
</g>
<g >
<title>kmem_cache_debug (50 samples, 0.01%)</title><rect x="244.2" y="133" width="0.1" height="15.0" fill="rgb(238,138,37)" rx="2" ry="2" />
<text  x="247.15" y="143.5" ></text>
</g>
<g >
<title>__fget_light (2,660 samples, 0.51%)</title><rect x="701.8" y="325" width="5.9" height="15.0" fill="rgb(216,136,46)" rx="2" ry="2" />
<text  x="704.76" y="335.5" ></text>
</g>
<g >
<title>get_freepointer.isra.0 (241 samples, 0.05%)</title><rect x="282.5" y="149" width="0.6" height="15.0" fill="rgb(218,79,25)" rx="2" ry="2" />
<text  x="285.54" y="159.5" ></text>
</g>
<g >
<title>skb_set_owner_w (95 samples, 0.02%)</title><rect x="840.3" y="245" width="0.2" height="15.0" fill="rgb(224,78,5)" rx="2" ry="2" />
<text  x="843.32" y="255.5" ></text>
</g>
<g >
<title>[unknown] (54 samples, 0.01%)</title><rect x="10.0" y="421" width="0.1" height="15.0" fill="rgb(212,33,10)" rx="2" ry="2" />
<text  x="13.01" y="431.5" ></text>
</g>
<g >
<title>tracker_parser_next (157 samples, 0.03%)</title><rect x="1170.8" y="405" width="0.3" height="15.0" fill="rgb(251,105,7)" rx="2" ry="2" />
<text  x="1173.78" y="415.5" ></text>
</g>
<g >
<title>get_freepointer.isra.0 (300 samples, 0.06%)</title><rect x="965.0" y="149" width="0.7" height="15.0" fill="rgb(248,74,35)" rx="2" ry="2" />
<text  x="968.01" y="159.5" ></text>
</g>
<g >
<title>set_freepointer (262 samples, 0.05%)</title><rect x="370.1" y="133" width="0.6" height="15.0" fill="rgb(245,115,54)" rx="2" ry="2" />
<text  x="373.07" y="143.5" ></text>
</g>
<g >
<title>slab_want_init_on_free (48 samples, 0.01%)</title><rect x="894.6" y="149" width="0.1" height="15.0" fill="rgb(227,184,41)" rx="2" ry="2" />
<text  x="897.56" y="159.5" ></text>
</g>
<g >
<title>obj_cgroup_uncharge_pages (2,209 samples, 0.42%)</title><rect x="267.1" y="101" width="5.0" height="15.0" fill="rgb(233,118,20)" rx="2" ry="2" />
<text  x="270.12" y="111.5" ></text>
</g>
<g >
<title>vfs_write (193,715 samples, 36.85%)</title><rect x="708.8" y="325" width="434.8" height="15.0" fill="rgb(238,184,15)" rx="2" ry="2" />
<text  x="711.84" y="335.5" >vfs_write</text>
</g>
<g >
<title>_raw_spin_unlock_irqrestore (41,761 samples, 7.94%)</title><rect x="1034.3" y="197" width="93.7" height="15.0" fill="rgb(207,98,2)" rx="2" ry="2" />
<text  x="1037.27" y="207.5" >_raw_spin_u..</text>
</g>
<g >
<title>skb_copy_datagram_iter (292 samples, 0.06%)</title><rect x="480.8" y="229" width="0.6" height="15.0" fill="rgb(238,67,12)" rx="2" ry="2" />
<text  x="483.79" y="239.5" ></text>
</g>
<g >
<title>[libsqlite3.so.0.8.6] (457 samples, 0.09%)</title><rect x="1168.0" y="421" width="1.0" height="15.0" fill="rgb(232,80,30)" rx="2" ry="2" />
<text  x="1170.95" y="431.5" ></text>
</g>
<g >
<title>aa_sk_perm (296 samples, 0.06%)</title><rect x="751.7" y="245" width="0.7" height="15.0" fill="rgb(217,169,20)" rx="2" ry="2" />
<text  x="754.72" y="255.5" ></text>
</g>
<g >
<title>rw_verify_area (396 samples, 0.08%)</title><rect x="707.9" y="325" width="0.9" height="15.0" fill="rgb(229,87,38)" rx="2" ry="2" />
<text  x="710.95" y="335.5" ></text>
</g>
<g >
<title>memcg_slab_free_hook (15,552 samples, 2.96%)</title><rect x="331.8" y="133" width="34.9" height="15.0" fill="rgb(251,201,43)" rx="2" ry="2" />
<text  x="334.84" y="143.5" >me..</text>
</g>
<g >
<title>set_freepointer (214 samples, 0.04%)</title><rect x="275.8" y="149" width="0.5" height="15.0" fill="rgb(233,46,46)" rx="2" ry="2" />
<text  x="278.85" y="159.5" ></text>
</g>
<g >
<title>apparmor_file_permission (468 samples, 0.09%)</title><rect x="564.0" y="293" width="1.0" height="15.0" fill="rgb(235,59,31)" rx="2" ry="2" />
<text  x="566.95" y="303.5" ></text>
</g>
<g >
<title>skb_set_owner_w (4,957 samples, 0.94%)</title><rect x="1018.8" y="229" width="11.1" height="15.0" fill="rgb(252,11,3)" rx="2" ry="2" />
<text  x="1021.79" y="239.5" ></text>
</g>
<g >
<title>[hackbench] (7,952 samples, 1.51%)</title><rect x="10.3" y="405" width="17.8" height="15.0" fill="rgb(223,209,50)" rx="2" ry="2" />
<text  x="13.27" y="415.5" ></text>
</g>
<g >
<title>__fdget_pos (354 samples, 0.07%)</title><rect x="701.0" y="325" width="0.8" height="15.0" fill="rgb(220,185,4)" rx="2" ry="2" />
<text  x="703.97" y="335.5" ></text>
</g>
<g >
<title>__raw_callee_save___pv_queued_spin_unlock (1,515 samples, 0.29%)</title><rect x="775.1" y="245" width="3.4" height="15.0" fill="rgb(208,140,14)" rx="2" ry="2" />
<text  x="778.08" y="255.5" ></text>
</g>
<g >
<title>slab_ksize (116 samples, 0.02%)</title><rect x="1007.4" y="165" width="0.2" height="15.0" fill="rgb(224,170,27)" rx="2" ry="2" />
<text  x="1010.38" y="175.5" ></text>
</g>
<g >
<title>slab_alloc_node.constprop.0 (28,301 samples, 5.38%)</title><rect x="941.9" y="181" width="63.6" height="15.0" fill="rgb(218,59,35)" rx="2" ry="2" />
<text  x="944.94" y="191.5" >slab_a..</text>
</g>
<g >
<title>kmem_cache_debug (70 samples, 0.01%)</title><rect x="331.6" y="117" width="0.2" height="15.0" fill="rgb(222,52,48)" rx="2" ry="2" />
<text  x="334.62" y="127.5" ></text>
</g>
<g >
<title>mod_objcg_state (1,749 samples, 0.33%)</title><rect x="981.4" y="133" width="3.9" height="15.0" fill="rgb(240,172,8)" rx="2" ry="2" />
<text  x="984.36" y="143.5" ></text>
</g>
<g >
<title>sock_sendmsg (76 samples, 0.01%)</title><rect x="724.3" y="293" width="0.2" height="15.0" fill="rgb(247,143,40)" rx="2" ry="2" />
<text  x="727.33" y="303.5" ></text>
</g>
<g >
<title>slab_want_init_on_free (55 samples, 0.01%)</title><rect x="382.4" y="133" width="0.1" height="15.0" fill="rgb(252,77,23)" rx="2" ry="2" />
<text  x="385.40" y="143.5" ></text>
</g>
<g >
<title>arch_local_irq_enable (414 samples, 0.08%)</title><rect x="352.7" y="101" width="0.9" height="15.0" fill="rgb(252,43,43)" rx="2" ry="2" />
<text  x="355.67" y="111.5" ></text>
</g>
<g >
<title>finish_task_switch.isra.0 (2,529 samples, 0.48%)</title><rect x="1159.3" y="293" width="5.7" height="15.0" fill="rgb(206,69,13)" rx="2" ry="2" />
<text  x="1162.30" y="303.5" ></text>
</g>
<g >
<title>syscall_exit_to_user_mode (3,547 samples, 0.67%)</title><rect x="593.0" y="357" width="7.9" height="15.0" fill="rgb(246,183,24)" rx="2" ry="2" />
<text  x="595.95" y="367.5" ></text>
</g>
<g >
<title>kmem_cache_debug (95 samples, 0.02%)</title><rect x="276.6" y="165" width="0.2" height="15.0" fill="rgb(254,181,46)" rx="2" ry="2" />
<text  x="279.56" y="175.5" ></text>
</g>
<g >
<title>apparmor_file_permission (761 samples, 0.14%)</title><rect x="1131.5" y="293" width="1.7" height="15.0" fill="rgb(207,181,16)" rx="2" ry="2" />
<text  x="1134.47" y="303.5" ></text>
</g>
<g >
<title>freelist_ptr.isra.0 (140 samples, 0.03%)</title><rect x="282.8" y="133" width="0.3" height="15.0" fill="rgb(221,213,48)" rx="2" ry="2" />
<text  x="285.77" y="143.5" ></text>
</g>
<g >
<title>setup_object.isra.0 (81 samples, 0.02%)</title><rect x="962.7" y="133" width="0.2" height="15.0" fill="rgb(218,179,12)" rx="2" ry="2" />
<text  x="965.75" y="143.5" ></text>
</g>
<g >
<title>syscall_enter_from_user_mode (6,247 samples, 1.19%)</title><rect x="1144.2" y="357" width="14.0" height="15.0" fill="rgb(242,51,16)" rx="2" ry="2" />
<text  x="1147.16" y="367.5" ></text>
</g>
<g >
<title>freelist_ptr.isra.0 (188 samples, 0.04%)</title><rect x="380.3" y="133" width="0.4" height="15.0" fill="rgb(228,20,52)" rx="2" ry="2" />
<text  x="383.25" y="143.5" ></text>
</g>
<g >
<title>__memcmp_avx2_movbe (58 samples, 0.01%)</title><rect x="1173.6" y="421" width="0.1" height="15.0" fill="rgb(236,187,1)" rx="2" ry="2" />
<text  x="1176.56" y="431.5" ></text>
</g>
<g >
<title>__slub_debug_enabled (58 samples, 0.01%)</title><rect x="797.7" y="197" width="0.1" height="15.0" fill="rgb(215,169,12)" rx="2" ry="2" />
<text  x="800.66" y="207.5" ></text>
</g>
<g >
<title>do_slab_free (58 samples, 0.01%)</title><rect x="218.2" y="181" width="0.2" height="15.0" fill="rgb(219,127,26)" rx="2" ry="2" />
<text  x="221.24" y="191.5" ></text>
</g>
<g >
<title>__build_skb_around (72 samples, 0.01%)</title><rect x="1011.9" y="213" width="0.2" height="15.0" fill="rgb(239,121,31)" rx="2" ry="2" />
<text  x="1014.89" y="223.5" ></text>
</g>
<g >
<title>__cond_resched (200 samples, 0.04%)</title><rect x="410.2" y="213" width="0.5" height="15.0" fill="rgb(207,195,27)" rx="2" ry="2" />
<text  x="413.22" y="223.5" ></text>
</g>
<g >
<title>apparmor_socket_recvmsg (632 samples, 0.12%)</title><rect x="162.5" y="261" width="1.4" height="15.0" fill="rgb(235,214,13)" rx="2" ry="2" />
<text  x="165.46" y="271.5" ></text>
</g>
<g >
<title>_ZN6icu_6722RuleBasedBreakIteratorD0Ev (402 samples, 0.08%)</title><rect x="1172.3" y="421" width="1.0" height="15.0" fill="rgb(242,2,31)" rx="2" ry="2" />
<text  x="1175.35" y="431.5" ></text>
</g>
<g >
<title>perf (45 samples, 0.01%)</title><rect x="1166.0" y="453" width="0.1" height="15.0" fill="rgb(234,0,18)" rx="2" ry="2" />
<text  x="1168.96" y="463.5" ></text>
</g>
<g >
<title>sock_recvmsg (149 samples, 0.03%)</title><rect x="563.5" y="293" width="0.3" height="15.0" fill="rgb(244,89,15)" rx="2" ry="2" />
<text  x="566.49" y="303.5" ></text>
</g>
<g >
<title>finish_task_switch.isra.0 (1,803 samples, 0.34%)</title><rect x="1014.7" y="181" width="4.1" height="15.0" fill="rgb(206,175,5)" rx="2" ry="2" />
<text  x="1017.74" y="191.5" ></text>
</g>
<g >
<title>slab_want_init_on_free (45 samples, 0.01%)</title><rect x="283.8" y="149" width="0.1" height="15.0" fill="rgb(227,29,32)" rx="2" ry="2" />
<text  x="286.77" y="159.5" ></text>
</g>
<g >
<title>slab_post_alloc_hook (139 samples, 0.03%)</title><rect x="1005.5" y="181" width="0.3" height="15.0" fill="rgb(218,91,11)" rx="2" ry="2" />
<text  x="1008.46" y="191.5" ></text>
</g>
<g >
<title>[unknown] (248 samples, 0.05%)</title><rect x="1170.0" y="405" width="0.5" height="15.0" fill="rgb(221,151,22)" rx="2" ry="2" />
<text  x="1172.95" y="415.5" ></text>
</g>
<g >
<title>freelist_dereference.isra.0 (511 samples, 0.10%)</title><rect x="963.9" y="149" width="1.1" height="15.0" fill="rgb(211,189,48)" rx="2" ry="2" />
<text  x="966.86" y="159.5" ></text>
</g>
<g >
<title>exit_to_user_mode_prepare (441 samples, 0.08%)</title><rect x="118.8" y="325" width="1.0" height="15.0" fill="rgb(224,189,19)" rx="2" ry="2" />
<text  x="121.80" y="335.5" ></text>
</g>
<g >
<title>sock_read_iter (1,032 samples, 0.20%)</title><rect x="576.9" y="309" width="2.3" height="15.0" fill="rgb(228,153,23)" rx="2" ry="2" />
<text  x="579.88" y="319.5" ></text>
</g>
<g >
<title>__x64_sys_read (200,928 samples, 38.22%)</title><rect x="128.3" y="357" width="451.0" height="15.0" fill="rgb(223,173,27)" rx="2" ry="2" />
<text  x="131.34" y="367.5" >__x64_sys_read</text>
</g>
<g >
<title>__cond_resched (198 samples, 0.04%)</title><rect x="914.0" y="149" width="0.4" height="15.0" fill="rgb(206,65,33)" rx="2" ry="2" />
<text  x="916.96" y="159.5" ></text>
</g>
<g >
<title>__fget_light (2,082 samples, 0.40%)</title><rect x="133.7" y="325" width="4.7" height="15.0" fill="rgb(225,10,30)" rx="2" ry="2" />
<text  x="136.69" y="335.5" ></text>
</g>
<g >
<title>__fdget_pos (378 samples, 0.07%)</title><rect x="129.1" y="341" width="0.9" height="15.0" fill="rgb(221,194,51)" rx="2" ry="2" />
<text  x="132.10" y="351.5" ></text>
</g>
<g >
<title>kmem_cache_free (180 samples, 0.03%)</title><rect x="296.5" y="213" width="0.4" height="15.0" fill="rgb(238,207,15)" rx="2" ry="2" />
<text  x="299.45" y="223.5" ></text>
</g>
<g >
<title>__schedule (2,590 samples, 0.49%)</title><rect x="1159.2" y="309" width="5.8" height="15.0" fill="rgb(208,16,21)" rx="2" ry="2" />
<text  x="1162.16" y="319.5" ></text>
</g>
<g >
<title>slab_free (60 samples, 0.01%)</title><rect x="383.1" y="181" width="0.1" height="15.0" fill="rgb(249,155,7)" rx="2" ry="2" />
<text  x="386.08" y="191.5" ></text>
</g>
<g >
<title>arch_call_rest_init (1,056 samples, 0.20%)</title><rect x="1187.6" y="373" width="2.4" height="15.0" fill="rgb(240,173,16)" rx="2" ry="2" />
<text  x="1190.59" y="383.5" ></text>
</g>
<g >
<title>rw_verify_area (272 samples, 0.05%)</title><rect x="138.6" y="325" width="0.6" height="15.0" fill="rgb(247,94,10)" rx="2" ry="2" />
<text  x="141.58" y="335.5" ></text>
</g>
<g >
<title>get_partial_node.part.0 (2,571 samples, 0.49%)</title><rect x="956.8" y="149" width="5.7" height="15.0" fill="rgb(236,74,45)" rx="2" ry="2" />
<text  x="959.77" y="159.5" ></text>
</g>
<g >
<title>slab_free_freelist_hook (82 samples, 0.02%)</title><rect x="382.9" y="165" width="0.2" height="15.0" fill="rgb(221,175,2)" rx="2" ry="2" />
<text  x="385.89" y="175.5" ></text>
</g>
<g >
<title>__skb_datagram_iter (25,035 samples, 4.76%)</title><rect x="505.9" y="197" width="56.2" height="15.0" fill="rgb(233,195,38)" rx="2" ry="2" />
<text  x="508.95" y="207.5" >__skb..</text>
</g>
<g >
<title>do_slab_free (25,289 samples, 4.81%)</title><rect x="219.6" y="165" width="56.7" height="15.0" fill="rgb(231,196,17)" rx="2" ry="2" />
<text  x="222.57" y="175.5" >do_sla..</text>
</g>
<g >
<title>__slub_debug_enabled (49 samples, 0.01%)</title><rect x="962.8" y="117" width="0.1" height="15.0" fill="rgb(222,96,14)" rx="2" ry="2" />
<text  x="965.76" y="127.5" ></text>
</g>
<g >
<title>_copy_to_iter (85 samples, 0.02%)</title><rect x="507.9" y="181" width="0.2" height="15.0" fill="rgb(246,144,2)" rx="2" ry="2" />
<text  x="510.93" y="191.5" ></text>
</g>
<g >
<title>cmpxchg_double_slab.constprop.0.isra.0 (4,820 samples, 0.92%)</title><rect x="319.2" y="133" width="10.8" height="15.0" fill="rgb(235,10,42)" rx="2" ry="2" />
<text  x="322.19" y="143.5" ></text>
</g>
<g >
<title>kmem_cache_debug (403 samples, 0.08%)</title><rect x="243.0" y="149" width="1.0" height="15.0" fill="rgb(226,124,19)" rx="2" ry="2" />
<text  x="246.05" y="159.5" ></text>
</g>
<g >
<title>__ksize (140 samples, 0.03%)</title><rect x="864.5" y="165" width="0.3" height="15.0" fill="rgb(224,121,54)" rx="2" ry="2" />
<text  x="867.47" y="175.5" ></text>
</g>
<g >
<title>arch_local_irq_enable (140 samples, 0.03%)</title><rect x="932.4" y="85" width="0.3" height="15.0" fill="rgb(226,178,0)" rx="2" ry="2" />
<text  x="935.35" y="95.5" ></text>
</g>
<g >
<title>memcg_slab_pre_alloc_hook (8,691 samples, 1.65%)</title><rect x="914.7" y="149" width="19.5" height="15.0" fill="rgb(217,42,23)" rx="2" ry="2" />
<text  x="917.67" y="159.5" ></text>
</g>
<g >
<title>__check_object_size (171 samples, 0.03%)</title><rect x="507.5" y="181" width="0.4" height="15.0" fill="rgb(235,69,2)" rx="2" ry="2" />
<text  x="510.54" y="191.5" ></text>
</g>
<g >
<title>__slub_debug_enabled (53 samples, 0.01%)</title><rect x="528.7" y="133" width="0.1" height="15.0" fill="rgb(243,214,4)" rx="2" ry="2" />
<text  x="531.66" y="143.5" ></text>
</g>
<g >
<title>__fdget_pos (413 samples, 0.08%)</title><rect x="697.1" y="341" width="0.9" height="15.0" fill="rgb(215,192,11)" rx="2" ry="2" />
<text  x="700.08" y="351.5" ></text>
</g>
<g >
<title>x86_64_start_kernel (1,056 samples, 0.20%)</title><rect x="1187.6" y="421" width="2.4" height="15.0" fill="rgb(213,73,14)" rx="2" ry="2" />
<text  x="1190.59" y="431.5" ></text>
</g>
<g >
<title>pfmemalloc_match_unsafe (166 samples, 0.03%)</title><rect x="895.6" y="165" width="0.3" height="15.0" fill="rgb(216,227,10)" rx="2" ry="2" />
<text  x="898.56" y="175.5" ></text>
</g>
<g >
<title>page_counter_cancel (79 samples, 0.02%)</title><rect x="357.3" y="69" width="0.2" height="15.0" fill="rgb(252,194,38)" rx="2" ry="2" />
<text  x="360.33" y="79.5" ></text>
</g>
<g >
<title>kmem_cache_alloc_node (29,748 samples, 5.66%)</title><rect x="940.0" y="197" width="66.8" height="15.0" fill="rgb(232,1,51)" rx="2" ry="2" />
<text  x="943.02" y="207.5" >kmem_ca..</text>
</g>
<g >
<title>kmem_cache_debug_flags (62 samples, 0.01%)</title><rect x="533.7" y="149" width="0.1" height="15.0" fill="rgb(244,7,3)" rx="2" ry="2" />
<text  x="536.68" y="159.5" ></text>
</g>
<g >
<title>[libsqlite3.so.0.8.6] (50 samples, 0.01%)</title><rect x="1170.1" y="373" width="0.1" height="15.0" fill="rgb(239,77,51)" rx="2" ry="2" />
<text  x="1173.13" y="383.5" ></text>
</g>
<g >
<title>__slub_debug_enabled (48 samples, 0.01%)</title><rect x="529.1" y="117" width="0.1" height="15.0" fill="rgb(252,45,11)" rx="2" ry="2" />
<text  x="532.08" y="127.5" ></text>
</g>
<g >
<title>slab_free_hook (111 samples, 0.02%)</title><rect x="382.5" y="149" width="0.3" height="15.0" fill="rgb(234,50,33)" rx="2" ry="2" />
<text  x="385.52" y="159.5" ></text>
</g>
<g >
<title>copy_user_enhanced_fast_string (4,490 samples, 0.85%)</title><rect x="809.9" y="229" width="10.1" height="15.0" fill="rgb(209,58,29)" rx="2" ry="2" />
<text  x="812.95" y="239.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64 (214,993 samples, 40.89%)</title><rect x="119.8" y="389" width="482.5" height="15.0" fill="rgb(253,124,29)" rx="2" ry="2" />
<text  x="122.79" y="399.5" >entry_SYSCALL_64</text>
</g>
<g >
<title>memcg_slab_post_alloc_hook (167 samples, 0.03%)</title><rect x="966.7" y="165" width="0.3" height="15.0" fill="rgb(217,130,6)" rx="2" ry="2" />
<text  x="969.68" y="175.5" ></text>
</g>
<g >
<title>obj_cgroup_uncharge (2,885 samples, 0.55%)</title><rect x="265.7" y="133" width="6.5" height="15.0" fill="rgb(224,198,1)" rx="2" ry="2" />
<text  x="268.69" y="143.5" ></text>
</g>
<g >
<title>kmem_cache_debug_flags (245 samples, 0.05%)</title><rect x="330.9" y="117" width="0.5" height="15.0" fill="rgb(233,146,28)" rx="2" ry="2" />
<text  x="333.86" y="127.5" ></text>
</g>
<g >
<title>___slab_alloc (5,800 samples, 1.10%)</title><rect x="949.9" y="165" width="13.1" height="15.0" fill="rgb(252,19,17)" rx="2" ry="2" />
<text  x="952.95" y="175.5" ></text>
</g>
<g >
<title>skb_unlink (9,479 samples, 1.80%)</title><rect x="482.5" y="229" width="21.2" height="15.0" fill="rgb(223,91,50)" rx="2" ry="2" />
<text  x="485.47" y="239.5" >s..</text>
</g>
<g >
<title>refill_obj_stock (60 samples, 0.01%)</title><rect x="933.4" y="117" width="0.1" height="15.0" fill="rgb(250,158,13)" rx="2" ry="2" />
<text  x="936.36" y="127.5" ></text>
</g>
<g >
<title>skb_free_head (34,699 samples, 6.60%)</title><rect x="305.3" y="197" width="77.9" height="15.0" fill="rgb(207,144,6)" rx="2" ry="2" />
<text  x="308.33" y="207.5" >skb_free_..</text>
</g>
<g >
<title>obj_full_size.isra.0 (143 samples, 0.03%)</title><rect x="934.4" y="149" width="0.3" height="15.0" fill="rgb(220,13,29)" rx="2" ry="2" />
<text  x="937.37" y="159.5" ></text>
</g>
<g >
<title>__pv_queued_spin_lock_slowpath (576 samples, 0.11%)</title><rect x="779.0" y="229" width="1.3" height="15.0" fill="rgb(236,30,45)" rx="2" ry="2" />
<text  x="782.04" y="239.5" ></text>
</g>
<g >
<title>_raw_spin_unlock_irqrestore (1,504 samples, 0.29%)</title><rect x="399.1" y="117" width="3.4" height="15.0" fill="rgb(218,200,25)" rx="2" ry="2" />
<text  x="402.11" y="127.5" ></text>
</g>
<g >
<title>_raw_spin_unlock_irqrestore (2,604 samples, 0.50%)</title><rect x="884.3" y="133" width="5.9" height="15.0" fill="rgb(209,54,51)" rx="2" ry="2" />
<text  x="887.32" y="143.5" ></text>
</g>
<g >
<title>page_counter_uncharge (1,788 samples, 0.34%)</title><rect x="267.6" y="85" width="4.0" height="15.0" fill="rgb(246,228,53)" rx="2" ry="2" />
<text  x="270.59" y="95.5" ></text>
</g>
<g >
<title>cpuidle_enter (4,632 samples, 0.88%)</title><rect x="1176.1" y="373" width="10.4" height="15.0" fill="rgb(251,12,50)" rx="2" ry="2" />
<text  x="1179.12" y="383.5" ></text>
</g>
<g >
<title>vfs_read (55 samples, 0.01%)</title><rect x="579.2" y="341" width="0.1" height="15.0" fill="rgb(240,141,7)" rx="2" ry="2" />
<text  x="582.20" y="351.5" ></text>
</g>
<g >
<title>cache_from_obj (143 samples, 0.03%)</title><rect x="216.5" y="197" width="0.4" height="15.0" fill="rgb(217,162,37)" rx="2" ry="2" />
<text  x="219.53" y="207.5" ></text>
</g>
<g >
<title>obj_cgroup_charge_pages (1,996 samples, 0.38%)</title><rect x="999.2" y="117" width="4.5" height="15.0" fill="rgb(237,24,20)" rx="2" ry="2" />
<text  x="1002.24" y="127.5" ></text>
</g>
<g >
<title>__unfreeze_partials (774 samples, 0.15%)</title><rect x="273.8" y="133" width="1.7" height="15.0" fill="rgb(252,14,9)" rx="2" ry="2" />
<text  x="276.81" y="143.5" ></text>
</g>
<g >
<title>security_file_permission (755 samples, 0.14%)</title><rect x="1140.7" y="309" width="1.6" height="15.0" fill="rgb(232,202,4)" rx="2" ry="2" />
<text  x="1143.65" y="319.5" ></text>
</g>
<g >
<title>vfs_read (196,039 samples, 37.29%)</title><rect x="139.2" y="325" width="440.0" height="15.0" fill="rgb(245,147,8)" rx="2" ry="2" />
<text  x="142.19" y="335.5" >vfs_read</text>
</g>
<g >
<title>syscall_exit_to_user_mode (328 samples, 0.06%)</title><rect x="1165.0" y="373" width="0.8" height="15.0" fill="rgb(224,18,24)" rx="2" ry="2" />
<text  x="1168.04" y="383.5" ></text>
</g>
<g >
<title>rcu_read_unlock_strict (161 samples, 0.03%)</title><rect x="912.2" y="149" width="0.4" height="15.0" fill="rgb(253,62,52)" rx="2" ry="2" />
<text  x="915.20" y="159.5" ></text>
</g>
<g >
<title>kmem_cache_free (35,408 samples, 6.74%)</title><rect x="216.9" y="197" width="79.4" height="15.0" fill="rgb(210,63,50)" rx="2" ry="2" />
<text  x="219.85" y="207.5" >kmem_cach..</text>
</g>
<g >
<title>skb_release_data (81 samples, 0.02%)</title><rect x="481.4" y="229" width="0.2" height="15.0" fill="rgb(235,77,44)" rx="2" ry="2" />
<text  x="484.45" y="239.5" ></text>
</g>
<g >
<title>apparmor_socket_getpeersec_dgram (1,079 samples, 0.21%)</title><rect x="780.8" y="245" width="2.5" height="15.0" fill="rgb(219,122,4)" rx="2" ry="2" />
<text  x="783.84" y="255.5" ></text>
</g>
<g >
<title>start_secondary (5,203 samples, 0.99%)</title><rect x="1175.9" y="421" width="11.7" height="15.0" fill="rgb(218,56,49)" rx="2" ry="2" />
<text  x="1178.91" y="431.5" ></text>
</g>
<g >
<title>malloc (95 samples, 0.02%)</title><rect x="1175.5" y="437" width="0.2" height="15.0" fill="rgb(253,70,54)" rx="2" ry="2" />
<text  x="1178.50" y="447.5" ></text>
</g>
<g >
<title>refill_obj_stock (108 samples, 0.02%)</title><rect x="366.5" y="117" width="0.2" height="15.0" fill="rgb(210,17,17)" rx="2" ry="2" />
<text  x="369.50" y="127.5" ></text>
</g>
<g >
<title>___slab_alloc (5,891 samples, 1.12%)</title><rect x="877.4" y="165" width="13.2" height="15.0" fill="rgb(212,130,53)" rx="2" ry="2" />
<text  x="880.43" y="175.5" ></text>
</g>
<g >
<title>sock_sendmsg (177,377 samples, 33.74%)</title><rect x="732.3" y="277" width="398.1" height="15.0" fill="rgb(247,101,29)" rx="2" ry="2" />
<text  x="735.26" y="287.5" >sock_sendmsg</text>
</g>
<g >
<title>ksys_read (200,155 samples, 38.07%)</title><rect x="130.0" y="341" width="449.2" height="15.0" fill="rgb(222,194,30)" rx="2" ry="2" />
<text  x="132.95" y="351.5" >ksys_read</text>
</g>
<g >
<title>skb_free_head (119 samples, 0.02%)</title><rect x="296.9" y="213" width="0.2" height="15.0" fill="rgb(241,175,21)" rx="2" ry="2" />
<text  x="299.86" y="223.5" ></text>
</g>
<g >
<title>obj_full_size.isra.0 (122 samples, 0.02%)</title><rect x="1004.5" y="149" width="0.3" height="15.0" fill="rgb(218,6,2)" rx="2" ry="2" />
<text  x="1007.48" y="159.5" ></text>
</g>
<g >
<title>unix_destruct_scm (983 samples, 0.19%)</title><rect x="403.2" y="213" width="2.2" height="15.0" fill="rgb(246,191,22)" rx="2" ry="2" />
<text  x="406.18" y="223.5" ></text>
</g>
<g >
<title>iov_iter_init (276 samples, 0.05%)</title><rect x="146.4" y="309" width="0.6" height="15.0" fill="rgb(240,6,30)" rx="2" ry="2" />
<text  x="149.38" y="319.5" ></text>
</g>
<g >
<title>exit_to_user_mode_prepare (3,047 samples, 0.58%)</title><rect x="594.0" y="341" width="6.9" height="15.0" fill="rgb(217,179,7)" rx="2" ry="2" />
<text  x="597.03" y="351.5" ></text>
</g>
<g >
<title>__x64_sys_read (845 samples, 0.16%)</title><rect x="119.8" y="373" width="1.9" height="15.0" fill="rgb(214,157,14)" rx="2" ry="2" />
<text  x="122.79" y="383.5" ></text>
</g>
<g >
<title>prepare_to_wait (525 samples, 0.10%)</title><rect x="1013.0" y="229" width="1.2" height="15.0" fill="rgb(247,116,14)" rx="2" ry="2" />
<text  x="1015.98" y="239.5" ></text>
</g>
<g >
<title>containerd (72 samples, 0.01%)</title><rect x="10.0" y="453" width="0.2" height="15.0" fill="rgb(217,89,44)" rx="2" ry="2" />
<text  x="13.01" y="463.5" ></text>
</g>
<g >
<title>sock_recvmsg (179,145 samples, 34.08%)</title><rect x="160.3" y="277" width="402.1" height="15.0" fill="rgb(222,71,12)" rx="2" ry="2" />
<text  x="163.28" y="287.5" >sock_recvmsg</text>
</g>
<g >
<title>kfree (34,492 samples, 6.56%)</title><rect x="305.7" y="181" width="77.4" height="15.0" fill="rgb(243,215,22)" rx="2" ry="2" />
<text  x="308.66" y="191.5" >kfree</text>
</g>
<g >
<title>exit_to_user_mode_prepare (171 samples, 0.03%)</title><rect x="690.9" y="325" width="0.4" height="15.0" fill="rgb(243,54,21)" rx="2" ry="2" />
<text  x="693.94" y="335.5" ></text>
</g>
<g >
<title>page_counter_try_charge (90 samples, 0.02%)</title><rect x="1003.5" y="85" width="0.2" height="15.0" fill="rgb(232,181,30)" rx="2" ry="2" />
<text  x="1006.49" y="95.5" ></text>
</g>
<g >
<title>rest_init (1,056 samples, 0.20%)</title><rect x="1187.6" y="357" width="2.4" height="15.0" fill="rgb(220,188,1)" rx="2" ry="2" />
<text  x="1190.59" y="367.5" ></text>
</g>
<g >
<title>arch_local_irq_enable (67 samples, 0.01%)</title><rect x="1003.3" y="85" width="0.2" height="15.0" fill="rgb(209,193,41)" rx="2" ry="2" />
<text  x="1006.34" y="95.5" ></text>
</g>
<g >
<title>[unknown] (3,325 samples, 0.63%)</title><rect x="1167.4" y="437" width="7.5" height="15.0" fill="rgb(208,79,25)" rx="2" ry="2" />
<text  x="1170.40" y="447.5" ></text>
</g>
<g >
<title>ksize (260 samples, 0.05%)</title><rect x="864.3" y="181" width="0.6" height="15.0" fill="rgb(207,10,29)" rx="2" ry="2" />
<text  x="867.34" y="191.5" ></text>
</g>
<g >
<title>g_str_hash (50 samples, 0.01%)</title><rect x="1174.2" y="421" width="0.1" height="15.0" fill="rgb(217,71,24)" rx="2" ry="2" />
<text  x="1177.21" y="431.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64 (112 samples, 0.02%)</title><rect x="1173.3" y="405" width="0.3" height="15.0" fill="rgb(211,120,43)" rx="2" ry="2" />
<text  x="1176.31" y="415.5" ></text>
</g>
<g >
<title>arch_local_irq_enable (441 samples, 0.08%)</title><rect x="264.6" y="117" width="1.0" height="15.0" fill="rgb(240,181,40)" rx="2" ry="2" />
<text  x="267.61" y="127.5" ></text>
</g>
<g >
<title>obj_cgroup_uncharge (5,694 samples, 1.08%)</title><rect x="353.7" y="117" width="12.7" height="15.0" fill="rgb(228,26,2)" rx="2" ry="2" />
<text  x="356.66" y="127.5" ></text>
</g>
<g >
<title>__unfreeze_partials (768 samples, 0.15%)</title><rect x="368.0" y="117" width="1.8" height="15.0" fill="rgb(238,220,38)" rx="2" ry="2" />
<text  x="371.05" y="127.5" ></text>
</g>
<g >
<title>sysvec_reschedule_ipi (171 samples, 0.03%)</title><rect x="690.9" y="373" width="0.4" height="15.0" fill="rgb(230,15,9)" rx="2" ry="2" />
<text  x="693.94" y="383.5" ></text>
</g>
<g >
<title>asm_sysvec_reschedule_ipi (55 samples, 0.01%)</title><rect x="1167.3" y="421" width="0.1" height="15.0" fill="rgb(233,3,45)" rx="2" ry="2" />
<text  x="1170.27" y="431.5" ></text>
</g>
<g >
<title>slab_pre_alloc_hook.constprop.0 (132 samples, 0.03%)</title><rect x="935.7" y="181" width="0.3" height="15.0" fill="rgb(244,132,48)" rx="2" ry="2" />
<text  x="938.73" y="191.5" ></text>
</g>
<g >
<title>kmem_cache_alloc_node (111 samples, 0.02%)</title><rect x="1012.4" y="213" width="0.3" height="15.0" fill="rgb(242,115,54)" rx="2" ry="2" />
<text  x="1015.43" y="223.5" ></text>
</g>
<g >
<title>irqentry_exit_to_user_mode (441 samples, 0.08%)</title><rect x="118.8" y="341" width="1.0" height="15.0" fill="rgb(237,146,12)" rx="2" ry="2" />
<text  x="121.80" y="351.5" ></text>
</g>
<g >
<title>security_socket_sendmsg (2,927 samples, 0.56%)</title><rect x="750.4" y="261" width="6.6" height="15.0" fill="rgb(208,35,46)" rx="2" ry="2" />
<text  x="753.40" y="271.5" ></text>
</g>
<g >
<title>__x64_sys_pwrite64 (107 samples, 0.02%)</title><rect x="1173.3" y="373" width="0.2" height="15.0" fill="rgb(205,1,9)" rx="2" ry="2" />
<text  x="1176.31" y="383.5" ></text>
</g>
<g >
<title>__cond_resched (272 samples, 0.05%)</title><rect x="963.0" y="165" width="0.6" height="15.0" fill="rgb(247,61,3)" rx="2" ry="2" />
<text  x="965.96" y="175.5" ></text>
</g>
<g >
<title>wait_for_unix_gc (840 samples, 0.16%)</title><rect x="1128.1" y="245" width="1.9" height="15.0" fill="rgb(230,146,7)" rx="2" ry="2" />
<text  x="1131.12" y="255.5" ></text>
</g>
<g >
<title>[libicuuc.so.67.1] (105 samples, 0.02%)</title><rect x="1167.4" y="405" width="0.2" height="15.0" fill="rgb(233,81,5)" rx="2" ry="2" />
<text  x="1170.41" y="415.5" ></text>
</g>
<g >
<title>unix_stream_sendmsg (432 samples, 0.08%)</title><rect x="1130.4" y="277" width="1.0" height="15.0" fill="rgb(225,224,46)" rx="2" ry="2" />
<text  x="1133.38" y="287.5" ></text>
</g>
<g >
<title>rcu_read_unlock_strict (162 samples, 0.03%)</title><rect x="985.8" y="149" width="0.4" height="15.0" fill="rgb(247,9,48)" rx="2" ry="2" />
<text  x="988.81" y="159.5" ></text>
</g>
<g >
<title>freelist_dereference.isra.0 (64 samples, 0.01%)</title><rect x="282.6" y="133" width="0.2" height="15.0" fill="rgb(248,32,50)" rx="2" ry="2" />
<text  x="285.63" y="143.5" ></text>
</g>
<g >
<title>sock_read_iter (183,131 samples, 34.83%)</title><rect x="152.4" y="293" width="411.1" height="15.0" fill="rgb(233,166,52)" rx="2" ry="2" />
<text  x="155.45" y="303.5" >sock_read_iter</text>
</g>
<g >
<title>slab_post_alloc_hook (110 samples, 0.02%)</title><rect x="935.5" y="181" width="0.2" height="15.0" fill="rgb(253,145,27)" rx="2" ry="2" />
<text  x="938.48" y="191.5" ></text>
</g>
<g >
<title>__schedule (1,893 samples, 0.36%)</title><rect x="1014.5" y="197" width="4.3" height="15.0" fill="rgb(245,52,0)" rx="2" ry="2" />
<text  x="1017.54" y="207.5" ></text>
</g>
<g >
<title>obj_cgroup_charge (3,073 samples, 0.58%)</title><rect x="997.0" y="133" width="6.9" height="15.0" fill="rgb(250,195,25)" rx="2" ry="2" />
<text  x="999.99" y="143.5" ></text>
</g>
<g >
<title>do_syscall_64 (112 samples, 0.02%)</title><rect x="1173.3" y="389" width="0.3" height="15.0" fill="rgb(223,164,53)" rx="2" ry="2" />
<text  x="1176.31" y="399.5" ></text>
</g>
<g >
<title>__ksize (1,399 samples, 0.27%)</title><rect x="861.2" y="181" width="3.1" height="15.0" fill="rgb(223,179,26)" rx="2" ry="2" />
<text  x="864.20" y="191.5" ></text>
</g>
<g >
<title>secondary_startup_64_no_verify (6,259 samples, 1.19%)</title><rect x="1175.9" y="437" width="14.1" height="15.0" fill="rgb(236,189,26)" rx="2" ry="2" />
<text  x="1178.91" y="447.5" ></text>
</g>
<g >
<title>memcg_slab_free_hook (12,525 samples, 2.38%)</title><rect x="244.3" y="149" width="28.1" height="15.0" fill="rgb(229,116,50)" rx="2" ry="2" />
<text  x="247.32" y="159.5" >m..</text>
</g>
<g >
<title>obj_full_size.isra.0 (174 samples, 0.03%)</title><rect x="367.0" y="133" width="0.4" height="15.0" fill="rgb(241,12,12)" rx="2" ry="2" />
<text  x="370.04" y="143.5" ></text>
</g>
<g >
<title>aa_file_perm (66 samples, 0.01%)</title><rect x="566.8" y="277" width="0.2" height="15.0" fill="rgb(220,110,31)" rx="2" ry="2" />
<text  x="569.81" y="287.5" ></text>
</g>
<g >
<title>__schedule (2,860 samples, 0.54%)</title><rect x="594.4" y="309" width="6.5" height="15.0" fill="rgb(221,90,48)" rx="2" ry="2" />
<text  x="597.44" y="319.5" ></text>
</g>
<g >
<title>memcg_slab_free_hook (150 samples, 0.03%)</title><rect x="276.8" y="165" width="0.4" height="15.0" fill="rgb(220,66,34)" rx="2" ry="2" />
<text  x="279.82" y="175.5" ></text>
</g>
<g >
<title>[hackbench] (514,823 samples, 97.93%)</title><rect x="10.3" y="421" width="1155.5" height="15.0" fill="rgb(233,145,31)" rx="2" ry="2" />
<text  x="13.26" y="431.5" >[hackbench]</text>
</g>
<g >
<title>_raw_spin_unlock_irqrestore (759 samples, 0.14%)</title><rect x="368.1" y="101" width="1.7" height="15.0" fill="rgb(228,59,12)" rx="2" ry="2" />
<text  x="371.07" y="111.5" ></text>
</g>
<g >
<title>get_freepointer.isra.0 (331 samples, 0.06%)</title><rect x="893.0" y="149" width="0.7" height="15.0" fill="rgb(234,63,12)" rx="2" ry="2" />
<text  x="895.97" y="159.5" ></text>
</g>
<g >
<title>__ksize (1,383 samples, 0.26%)</title><rect x="936.4" y="197" width="3.1" height="15.0" fill="rgb(208,226,32)" rx="2" ry="2" />
<text  x="939.42" y="207.5" ></text>
</g>
<g >
<title>freelist_ptr.isra.0 (215 samples, 0.04%)</title><rect x="330.0" y="133" width="0.5" height="15.0" fill="rgb(229,167,50)" rx="2" ry="2" />
<text  x="333.02" y="143.5" ></text>
</g>
<g >
<title>[unknown] (45 samples, 0.01%)</title><rect x="1166.0" y="437" width="0.1" height="15.0" fill="rgb(207,100,26)" rx="2" ry="2" />
<text  x="1168.96" y="447.5" ></text>
</g>
<g >
<title>_raw_spin_lock_irqsave (421 samples, 0.08%)</title><rect x="482.8" y="213" width="1.0" height="15.0" fill="rgb(222,162,33)" rx="2" ry="2" />
<text  x="485.83" y="223.5" ></text>
</g>
<g >
<title>arch_local_irq_enable (622 samples, 0.12%)</title><rect x="983.8" y="117" width="1.4" height="15.0" fill="rgb(243,143,11)" rx="2" ry="2" />
<text  x="986.79" y="127.5" ></text>
</g>
<g >
<title>kfree (139 samples, 0.03%)</title><rect x="305.0" y="197" width="0.3" height="15.0" fill="rgb(226,148,22)" rx="2" ry="2" />
<text  x="308.02" y="207.5" ></text>
</g>
<g >
<title>obj_cgroup_uncharge_pages (4,381 samples, 0.83%)</title><rect x="356.5" y="85" width="9.8" height="15.0" fill="rgb(224,112,38)" rx="2" ry="2" />
<text  x="359.49" y="95.5" ></text>
</g>
<g >
<title>[unknown] (54 samples, 0.01%)</title><rect x="10.0" y="437" width="0.1" height="15.0" fill="rgb(239,53,47)" rx="2" ry="2" />
<text  x="13.01" y="447.5" ></text>
</g>
<g >
<title>arch_local_irq_enable (2,766 samples, 0.53%)</title><rect x="594.7" y="277" width="6.2" height="15.0" fill="rgb(234,36,34)" rx="2" ry="2" />
<text  x="597.65" y="287.5" ></text>
</g>
<g >
<title>__cond_resched (189 samples, 0.04%)</title><rect x="1129.2" y="229" width="0.5" height="15.0" fill="rgb(229,200,29)" rx="2" ry="2" />
<text  x="1132.23" y="239.5" ></text>
</g>
<g >
<title>cpuidle_enter_state (4,629 samples, 0.88%)</title><rect x="1176.1" y="357" width="10.4" height="15.0" fill="rgb(240,57,34)" rx="2" ry="2" />
<text  x="1179.13" y="367.5" ></text>
</g>
<g >
<title>__raw_callee_save___pv_queued_spin_unlock (61 samples, 0.01%)</title><rect x="733.9" y="261" width="0.1" height="15.0" fill="rgb(242,96,10)" rx="2" ry="2" />
<text  x="736.91" y="271.5" ></text>
</g>
<g >
<title>rcu_all_qs (124 samples, 0.02%)</title><rect x="934.7" y="149" width="0.3" height="15.0" fill="rgb(206,127,34)" rx="2" ry="2" />
<text  x="937.70" y="159.5" ></text>
</g>
<g >
<title>irqentry_exit_to_user_mode (171 samples, 0.03%)</title><rect x="690.9" y="341" width="0.4" height="15.0" fill="rgb(212,163,54)" rx="2" ry="2" />
<text  x="693.94" y="351.5" ></text>
</g>
<g >
<title>[libicuuc.so.67.1] (179 samples, 0.03%)</title><rect x="1169.0" y="405" width="0.4" height="15.0" fill="rgb(240,171,45)" rx="2" ry="2" />
<text  x="1172.03" y="415.5" ></text>
</g>
<g >
<title>do_slab_free (27,640 samples, 5.26%)</title><rect x="308.6" y="149" width="62.1" height="15.0" fill="rgb(215,120,21)" rx="2" ry="2" />
<text  x="311.62" y="159.5" >do_sla..</text>
</g>
<g >
<title>memcg_slab_post_alloc_hook (180 samples, 0.03%)</title><rect x="894.7" y="165" width="0.4" height="15.0" fill="rgb(239,17,30)" rx="2" ry="2" />
<text  x="897.67" y="175.5" ></text>
</g>
<g >
<title>page_counter_try_charge (1,547 samples, 0.29%)</title><rect x="999.6" y="101" width="3.5" height="15.0" fill="rgb(236,76,2)" rx="2" ry="2" />
<text  x="1002.61" y="111.5" ></text>
</g>
<g >
<title>kmem_cache_debug_flags (214 samples, 0.04%)</title><rect x="797.8" y="197" width="0.5" height="15.0" fill="rgb(240,197,30)" rx="2" ry="2" />
<text  x="800.79" y="207.5" ></text>
</g>
<g >
<title>cpu_startup_entry (5,198 samples, 0.99%)</title><rect x="1175.9" y="405" width="11.7" height="15.0" fill="rgb(249,57,2)" rx="2" ry="2" />
<text  x="1178.91" y="415.5" ></text>
</g>
<g >
<title>finish_task_switch.isra.0 (389 samples, 0.07%)</title><rect x="1186.6" y="341" width="0.8" height="15.0" fill="rgb(218,186,44)" rx="2" ry="2" />
<text  x="1189.56" y="351.5" ></text>
</g>
<g >
<title>__libc_read (255,839 samples, 48.66%)</title><rect x="28.1" y="405" width="574.2" height="15.0" fill="rgb(213,59,28)" rx="2" ry="2" />
<text  x="31.12" y="415.5" >__libc_read</text>
</g>
<g >
<title>uiter_setString_67 (69 samples, 0.01%)</title><rect x="1171.9" y="405" width="0.1" height="15.0" fill="rgb(238,119,31)" rx="2" ry="2" />
<text  x="1174.88" y="415.5" ></text>
</g>
<g >
<title>vfs_write (107 samples, 0.02%)</title><rect x="1173.3" y="357" width="0.2" height="15.0" fill="rgb(212,19,11)" rx="2" ry="2" />
<text  x="1176.31" y="367.5" ></text>
</g>
</g>
</svg>
